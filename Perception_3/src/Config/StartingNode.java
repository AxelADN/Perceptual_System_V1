/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template FILE, choose Tools | Templates
 * and open the template in the editor.
 */
package Config;

import cFramework.util.IDHelper;
import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.apache.commons.math3.linear.RealMatrix;
import org.apache.commons.math3.stat.correlation.SpearmansCorrelation;
import org.opencv.core.Mat;
import org.opencv.core.Size;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;
import utils.Constants;
import utils.DataStructure;
import utils.Operation;

/**
 *
 * @author AxelADN
 */
public class StartingNode extends ProcessTemplate {

    private int time;
    private static GUI gui = null;
    private Mat img;
    private String imgString;
    int imgIndex;
    private String currentPrefix;

    public StartingNode() {
        this.ID = Names.StartingNode;

        defaultModality = DataStructure.Modalities.VISUAL_LOW;
        time = 0;
        imgString = new String();
        imgIndex = 1;
        currentPrefix = "obj";

        //send(this.ID,new byte[]{});
        //init();
    }

    public void triggerSend() {
        if (SystemConfig.EXTERNAL_ORIGIN) {
            currentPrefix = "S_Complejas_";
            manageExternalData(currentPrefix + String.valueOf(time % SystemConfig.MAX_EXTERNAL_SAMPLES + 1));
            time++;
        } else {
            time++;
            ArrayList<Mat> imgs = new ArrayList<>();
            img = Imgcodecs.imread(
                    imgString,
                    Imgcodecs.IMREAD_COLOR
            );
            //showImg(img);
            imgs.add(img);
            byte[] bytesToSend = DataStructure.wrapData(imgs, defaultModality, time);
            send(Names.V1_EdgeActivation, bytesToSend);
        }
    }

    public String getImg() {
        if (SystemConfig.EXTERNAL_ORIGIN) {
            imgString = SystemConfig.EXTERNAL_ORIGIN_IMAGE + currentPrefix + (time % SystemConfig.MAX_EXTERNAL_SAMPLES + 1) + SystemConfig.EXTERNAL_INPUT_EXTENSION;
            System.out.println("IMAGE: " + imgString);
        } else {
            imgString = SystemConfig.FILE + "Simples_" + imgIndex + SystemConfig.EXTENSION;
        }
        return imgString;
    }

    public void imgIndexPlus() {
        imgIndex += 1;
    }

    public String getImgName() {
        if (SystemConfig.EXTERNAL_ORIGIN) {
            return currentPrefix + (time % SystemConfig.MAX_EXTERNAL_SAMPLES + 1);
        }
        return "Simples_" + imgIndex;
    }

    @Override
    public void init() {

        java.awt.EventQueue.invokeLater(() -> {
            if (SystemConfig.SECOND_ORDER_DISS) {
                calculateSecondOrderDiss();
            } else if (SystemConfig.CORREL_CLASS_CALCULATION) {
                calculateDistancesCorrel();
            } else if (SystemConfig.DISTANCE_CLASS_CALCULATION) {
                calculateDistances();
            } else if (SystemConfig.DISTANCE_IMG_CALCULATION) {
                calculateImgDistances();
            } else {
                if (SystemConfig.TRAINING_MODE) {
                    trainningCycle();
                    System.out.println("Training_Finish");
                }
                sendSystemStateChange(Constants.STATE_TRAINING_OFF);
                systemState = Constants.STATE_TRAINING_OFF;
                //SystemConfig.TRAINING_MODE = false;
                time = 0;
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(StartingNode.class.getName()).log(Level.SEVERE, null, ex);
                }
                //startExperiment();
                if (gui == null) {
                    gui = new GUI(StartingNode.this);
                    gui.setVisible(true);
                }
            }
        });

    }

    @Override
    public void receive(long l, byte[] bytes) {
        //init();
    }

    public void actionPerformed(Mat img) {
        //showImg(img);
        ArrayList<Mat> imgs = new ArrayList<>();
        imgs.add(img);
        byte[] bytesToSend = DataStructure.wrapData(imgs, defaultModality, time);
        send(Names.V1_EdgeActivation, bytesToSend);
    }

    private void trainningCycle() {
        for (int j = 0; j < SystemConfig.TRAINING_CYCLES; j++) {
            for (int i = 0; i < SystemConfig.MAX_EXTERNAL_SAMPLES; i++) {
                try {
                    Thread.sleep(250L);
                    //System.out.println("TIME... " + i);
                    time = i;
                    if (SystemConfig.EXTERNAL_ORIGIN) {
                        currentPrefix = "Simples_";
                        manageExternalData(currentPrefix + String.valueOf(time % SystemConfig.MAX_EXTERNAL_SAMPLES + 1));
                    } else {
                        this.actionPerformed(
                                Imgcodecs.imread(
                                        SystemConfig.FILE + "obj" + i + "__0" + SystemConfig.EXTENSION,
                                        Imgcodecs.IMREAD_GRAYSCALE
                                )
                        );
                    }
                } catch (InterruptedException ex) {
                    Logger.getLogger(StartingNode.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    private void sendSystemStateChange(byte systemState0) {
        byte[] stateCaller = "SYSTEM STATE".getBytes();
        byte[] state = new byte[stateCaller.length + 1];
        System.arraycopy(stateCaller, 0, state, 0, stateCaller.length);
        state[stateCaller.length] = systemState0;
        Field[] SystemIDs = Names.class.getDeclaredFields();
        for (Field field : SystemIDs) {
            try {
                long id = (long) field.get(null);
                if (IDHelper.isActivitiy(id)) {
                    send(id, state);
                }
            } catch (IllegalArgumentException | IllegalAccessException ex) {
                Logger.getLogger(StartingNode.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void startExperiment() {
        for (int i = 1; i <= 100; i++) {
            try {
                Thread.sleep(250L);
                System.out.println("SAMPLE... " + i);
                time = i;
                //Reporter.report(i, i);
                this.actionPerformed(
                        Imgcodecs.imread(
                                SystemConfig.FILE + "obj" + i + "__0" + SystemConfig.EXTENSION,
                                Imgcodecs.IMREAD_GRAYSCALE
                        )
                );
            } catch (InterruptedException ex) {
                Logger.getLogger(StartingNode.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            Thread.sleep(5000);
        } catch (InterruptedException ex) {
            Logger.getLogger(StartingNode.class.getName()).log(Level.SEVERE, null, ex);
        }
        Reporter.buildReport();
        Reporter.endReport();
    }

    private void manageExternalData(String currentScene) {
        String sceneFile = SystemConfig.EXTERNAL_INPUT_FILE + currentScene + "\\";
        //System.out.println("SCENeFILE: "+sceneFile);
        sendV2Maps(sceneFile);
        sendV1Maps(sceneFile);
        sendV4Maps(sceneFile);
        sendContours(sceneFile);
    }

    private void sendContours(String sceneFile) {
        for (int i = 1; i <= 2; i++) {
            ArrayList<Mat> imgs2Send = new ArrayList<>();
            Mat data;
            String currentFile = sceneFile + SystemConfig.CONTOURS_FILE + "\\" + String.valueOf(i) + SystemConfig.EXTERNAL_INPUT_EXTENSION;
            data = Imgcodecs.imread(
                    currentFile,
                    Imgcodecs.IMREAD_GRAYSCALE
            );
            //System.out.println("FILE: "+currentFile);

            imgs2Send.add(data);
            byte[] bytesToSend = DataStructure.wrapData(imgs2Send, defaultModality, time);
            send(Names.pITC_ProtoObjectPartitioning, bytesToSend);
        }
    }

    private void sendV1Maps(String sceneFile) {
        for (int i = 0; i < 4; i++) {
            ArrayList<Mat> imgs2Send = new ArrayList<>();
            Mat data;
            String currentFile = sceneFile + SystemConfig.V1_FILE + "\\" + String.valueOf(i) + SystemConfig.EXTERNAL_INPUT_EXTENSION;
            data = Imgcodecs.imread(
                    currentFile,
                    Imgcodecs.IMREAD_GRAYSCALE
            );
            //System.out.println("FILE: "+currentFile);
            //showImg(data);
            imgs2Send.add(data);
            byte[] bytesToSend = DataStructure.wrapData(imgs2Send, defaultModality, time);
            send(Names.pITC_ProtoObjectPartitioning, bytesToSend);
        }
    }

    private void sendV2Maps(String sceneFile) {
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 8; j++) {
                ArrayList<Mat> imgs2Send = new ArrayList<>();
                Mat data;
                String currentDataNum = String.valueOf(i) + "_" + String.valueOf(j);
                String currentFile = sceneFile + SystemConfig.V2_FILE + "\\" + currentDataNum + SystemConfig.EXTERNAL_INPUT_EXTENSION;
                data = Imgcodecs.imread(
                        currentFile,
                        Imgcodecs.IMREAD_GRAYSCALE
                );
                //System.out.println("FILE: "+currentFile);
                //if(systemState==Constants.STATE_TRAINING_OFF)showImg(data);
                imgs2Send.add(data);
                byte[] bytesToSend = DataStructure.wrapData(imgs2Send, defaultModality, time);
                send(Names.pITC_ProtoObjectPartitioning, bytesToSend);
            }
        }
    }

    private void sendV4Maps(String sceneFile) {
        for (int i = 0; i < 4; i++) {
            ArrayList<Mat> imgs2Send = new ArrayList<>();
            Mat data;
            String currentFile = sceneFile + SystemConfig.V4_FILE + "\\" + String.valueOf(i) + SystemConfig.EXTERNAL_INPUT_EXTENSION;
            data = Imgcodecs.imread(
                    currentFile,
                    Imgcodecs.IMREAD_GRAYSCALE
            );
            //if(systemState==Constants.STATE_TRAINING_OFF) showImg(data);
            imgs2Send.add(data);
            byte[] bytesToSend = DataStructure.wrapData(imgs2Send, defaultModality, time);
            send(Names.pITC_ProtoObjectPartitioning, bytesToSend);
        }
    }

    private void calculateImgDistances() {
        ArrayList<Mat> simples = new ArrayList<>();
        ArrayList<Mat> complejas = new ArrayList<>();
        Mat currentImg;
        double[][] diff = new double[SystemConfig.MAX_EXTERNAL_SAMPLES][SystemConfig.MAX_EXTERNAL_SAMPLES];
        currentPrefix = "Simples_";
        String file = SystemConfig.EXTERNAL_ORIGIN_IMAGE + currentPrefix;
        for (int i = 1; i <= SystemConfig.MAX_EXTERNAL_SAMPLES; i++) {
            currentImg = Imgcodecs.imread(file + String.valueOf(i) + SystemConfig.EXTERNAL_INPUT_EXTENSION, Imgcodecs.IMREAD_GRAYSCALE);
            Imgproc.resize(currentImg, currentImg, new Size(200, 200));
            //System.out.println("IMG: " + currentImg.toString());
            //showImg(currentImg);
            simples.add(currentImg);
        }
        currentPrefix = "Simples_";
        file = SystemConfig.EXTERNAL_ORIGIN_IMAGE + currentPrefix;
        for (int i = 1; i <= SystemConfig.MAX_EXTERNAL_SAMPLES; i++) {
            currentImg = Imgcodecs.imread(file + String.valueOf(i) + SystemConfig.EXTERNAL_INPUT_EXTENSION, Imgcodecs.IMREAD_GRAYSCALE);
            Imgproc.resize(currentImg, currentImg, new Size(200, 200));
            //System.out.println("IMG: " + currentImg.toString());
            //showImg(currentImg);
            complejas.add(currentImg);
        }

        for (int i = 0; i < SystemConfig.MAX_EXTERNAL_SAMPLES; i++) {
            for (int j = 0; j < SystemConfig.MAX_EXTERNAL_SAMPLES; j++) {
                diff[i][j] = Operation.manhattanDistance(simples.get(i), complejas.get(j));
            }
        }
        diff = Operation.gridNormalization(diff);
        diff = Operation.gridInverting(diff);

        System.out.print("[");
        for (int i = 0; i < SystemConfig.MAX_EXTERNAL_SAMPLES; i++) {
            System.out.print("[");
            for (int j = 0; j < SystemConfig.MAX_EXTERNAL_SAMPLES; j++) {
                System.out.print(diff[i][j] + ",");
            }
            System.out.println("],");
        }
        System.out.println("]");
    }

    private void calculateDistances() {

        int[][] simples
                = {
                    {0, 8, 10, 89, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 1000479, 1000478, 1000495, 1000494, 1000493, 1000492, 1000491, 1000490, 1000489, 1000488, 1000487, 1000486, 1000485, 1000484, 1000483, 1000482, 1000481, 1000480, 1000509, 1000508, 1000507, 1000506, 1000505, 1000504, 1000503, 1000502, 1000501, 1000500, 1000499, 1000498, 1000497, 1000496, 1000015, 1000014, 1000013, 1000012, 1000011, 1000010, 1000009, 1000008, 1000007, 1000006, 1000005, 1000004, 1000003, 1000002, 1000001, 1000000, 1000043, 1000042, 1000041, 1000040, 1000105, 1000104, 1000279, 1000278, 2000990, 2000991, 2000964, 2000962, 2000963, 2000961, 2001019, 2001053, 2001050, 2001051, 2001049, 2001046, 2001047, 2001044, 2001045, 2001061, 2001102, 2001103, 2001100, 2001101, 2001098, 2001099, 2001144, 2001145, 2001143, 2001214, 2001215, 2001212, 2001213, 2001210, 2001211, 2001208, 2001209, 2001206, 2001207, 2001204, 2001205, 2001202, 2001203, 2001200, 2001201, 2001198, 2001199, 2001197, 2001246, 2001247, 2001244, 2001245, 2001242, 2001243, 2001240, 2001241, 2001238, 2001239, 2001236, 2001237, 2001234, 2001235, 2001232, 2001233, 2001230, 2001231, 2001228, 2001229, 2001226, 2001227, 2001224, 2001225, 2001222, 2001223, 2001220, 2001221, 2001218, 2001219, 2001216, 2001217, 2001276, 2001274, 2001275, 2001272, 2001273, 2001270, 2001271, 2001268, 2001269, 2001266, 2001267, 2001264, 2001265, 2001262, 2001263, 2001260, 2001261, 2001258, 2001259, 2001256, 2001257, 2001254, 2001255, 2001252, 2001253, 2001250, 2001251, 2001248, 2001249, 2001676, 2001758, 2001759, 2001756, 2001757, 2001754, 2001755, 2001752, 2001753, 2001750, 2001751, 2001790, 2001791, 2001788, 2001789, 2001786, 2001787, 2001784, 2001785, 2001782, 2001783, 2001780, 2001781, 2001778, 2001779, 2001776, 2001777, 2001774, 2001775, 2001772, 2001773, 2001770, 2001771, 2001768, 2001769, 2001766, 2001767, 2001764, 2001765, 2001762, 2001763, 2001760, 2001761, 2001822, 2001823, 2001820, 2001821, 2001818, 2001819, 2001816, 2001817, 2001814, 2001815, 2001812, 2001813, 2001810, 2001811, 2001808, 2001809, 2001806, 2001807, 2001804, 2001805, 2001802, 2001803, 2001800, 2001801, 2001798, 2001799, 2001796, 2001797, 2001794, 2001795, 2001792, 2001793, 2001834, 2001835, 2001832, 2001833, 2001830, 2001831, 2001828, 2001829, 2001826, 2001827, 2001824, 2001825, 2000030, 2000028, 2000029, 2000026, 2000027, 2000022, 2000023, 2000018, 2000019, 2000017, 2000014, 2000015, 2000012, 2000013, 2000010, 2000011, 2000008, 2000009, 2000006, 2000007, 2000004, 2000005, 2000002, 2000000, 2000001, 2000059, 2000057, 2000054, 2000055, 2000050, 2000051, 2000045, 2000042, 2000146, 2000147, 2000144, 2000145, 2000142, 2000143, 2000140, 2000141, 2000138, 2000139, 2000136, 2000137, 2000134, 2000135, 2000304, 2000305, 2000788, 2000789, 2000786, 2000787, 2000784, 2000785, 2000771, 2000806, 2000805},
                    {34, 82, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 1000511, 1000510, 1000527, 1000526, 1000525, 1000524, 1000523, 1000522, 1000521, 1000520, 1000519, 1000518, 1000517, 1000516, 1000515, 1000514, 1000513, 1000512, 1000541, 1000540, 1000539, 1000538, 1000537, 1000536, 1000535, 1000534, 1000533, 1000532, 1000531, 1000530, 1000529, 1000528, 1000668, 1000042, 1000055, 1000054, 1000053, 1000052, 1000051, 1000050, 1000049, 1000048, 1000067, 1000066, 1000065, 1000064, 1000083, 1000082, 1000081, 1000080, 1000106, 1000103, 1000102, 1000101, 1000100, 1000279, 1000278, 1000361, 1000359, 1000358, 1000354, 2001278, 2001279, 2001277, 2001300, 2001298, 2001299, 2001296, 2001297, 2001294, 2001295, 2001292, 2001293, 2001290, 2001291, 2001288, 2001289, 2001286, 2001287, 2001284, 2001285, 2001282, 2001283, 2001280, 2001281, 2001326, 2001324, 2001325, 2000158, 2000159, 2000156, 2000157, 2000149, 2000188, 2000178, 2000179, 2000176, 2000177, 2000174, 2000175, 2000172, 2000173, 2000170, 2000171, 2000168, 2000169, 2000166, 2000167, 2000164, 2000165, 2000162, 2000163, 2000160, 2000161, 2000222, 2000223, 2000220, 2000221, 2000218, 2000219, 2000216, 2000217, 2000214, 2000215, 2000212, 2000213, 2000210, 2000211, 2000208, 2000209, 2000206, 2000207, 2000204, 2000205, 2000202, 2000201, 2000197, 2000195, 2000250, 2000251, 2000248, 2000244, 2000245, 2000242, 2000243, 2000238, 2000239, 2000236, 2000237, 2000226, 2000227, 2000224, 2000225, 2000286, 2000287, 2000284, 2000285, 2000288, 2000372, 2000373},
                    {8, 10, 55, 56, 100, 114, 118, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 1000543, 1000542, 1000559, 1000558, 1000557, 1000556, 1000555, 1000554, 1000553, 1000552, 1000551, 1000550, 1000549, 1000548, 1000547, 1000546, 1000545, 1000544, 1000573, 1000572, 1000571, 1000570, 1000569, 1000568, 1000567, 1000566, 1000565, 1000564, 1000563, 1000562, 1000561, 1000560, 1000617, 1000616, 1000615, 1000614, 1000047, 1000046, 1000045, 1000044, 1000043, 1000042, 1000109, 1000119, 1000118, 1000116, 1000115, 1000114, 1000113, 1000112, 1000139, 1000138, 1000136, 1000135, 1000134, 1000133, 1000132, 1000159, 1000158, 1000157, 1000156, 1000151, 1000150, 1000149, 1000148, 1000147, 1000146, 1000145, 1000144, 1000187, 1000186, 1000183, 1000182, 1000181, 1000180, 1000365, 1000364, 1000363, 1000362, 2000942, 2000941, 2001062, 2001060, 2001061, 2001059, 2001144, 2001145, 2001143, 2001208, 2001202, 2001201, 2001198, 2001197, 2001310, 2001311, 2001308, 2001309, 2001306, 2001307, 2001304, 2001305, 2001302, 2001303, 2001300, 2001301, 2001298, 2001299, 2001296, 2001297, 2001294, 2001295, 2001293, 2001342, 2001343, 2001340, 2001341, 2001338, 2001339, 2001336, 2001337, 2001334, 2001335, 2001332, 2001333, 2001330, 2001331, 2001328, 2001329, 2001326, 2001327, 2001324, 2001325, 2001322, 2001323, 2001320, 2001321, 2001318, 2001319, 2001316, 2001317, 2001314, 2001315, 2001312, 2001313, 2001374, 2001375, 2001372, 2001373, 2001370, 2001371, 2001368, 2001369, 2001366, 2001367, 2001364, 2001365, 2001362, 2001363, 2001360, 2001361, 2001358, 2001359, 2001356, 2001357, 2001354, 2001355, 2001352, 2001353, 2001350, 2001351, 2001348, 2001349, 2001346, 2001347, 2001344, 2001345, 2001402, 2001400, 2001399, 2001396, 2001394, 2001393, 2001380, 2001378, 2001379, 2001376, 2001377, 2000031, 2000028, 2000029, 2000014, 2000012, 2000011, 2000007, 2000000, 2000062, 2000063, 2000044, 2000045, 2000042, 2000043, 2000040, 2000038, 2000039, 2000036, 2000034, 2000035, 2000286, 2000287, 2000284, 2000318, 2000319, 2000316, 2000317, 2000315, 2000310, 2000311, 2000308, 2000309, 2000306, 2000307, 2000296, 2000294, 2000295, 2000292, 2000293, 2000290, 2000291, 2000288, 2000289, 2000344, 2000345, 2000342, 2000343, 2000340, 2000341, 2000338, 2000339, 2000330, 2000322, 2000323, 2000320, 2000321, 2000369, 2000366, 2000398, 2000396, 2000397, 2000394, 2000395, 2000392, 2000393, 2000391, 2000428, 2000429, 2000426, 2000424, 2000425, 2000422, 2000423, 2000786, 2000787, 2000784, 2000785, 2000809, 2000806, 2000805, 2000858, 2000852},
                    {8, 9, 10, 58, 59, 60, 64, 65, 66, 68, 69, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 1000575, 1000574, 1000591, 1000590, 1000589, 1000588, 1000587, 1000586, 1000585, 1000584, 1000583, 1000582, 1000581, 1000580, 1000579, 1000578, 1000577, 1000576, 1000605, 1000604, 1000603, 1000602, 1000601, 1000600, 1000599, 1000598, 1000597, 1000596, 1000595, 1000594, 1000593, 1000592, 1000191, 1000190, 1000189, 1000188, 1000185, 1000184, 1000207, 1000206, 1000205, 1000204, 1000203, 1000201, 1000199, 1000198, 1000197, 1000196, 1000233, 1000232, 1000231, 1000230, 1000229, 1000228, 2001050, 2001051, 2001046, 2001047, 2001044, 2001045, 2001202, 2001203, 2001201, 2001197, 2001342, 2001343, 2001340, 2001341, 2001339, 2001362, 2001363, 2001360, 2001361, 2001358, 2001359, 2001356, 2001357, 2001344, 2001406, 2001407, 2001404, 2001405, 2001402, 2001403, 2001400, 2001401, 2001398, 2001399, 2001396, 2001397, 2001394, 2001395, 2001392, 2001393, 2001390, 2001391, 2001388, 2001389, 2001386, 2001387, 2001384, 2001385, 2001382, 2001383, 2001380, 2001381, 2001379, 2001438, 2001439, 2001436, 2001437, 2001434, 2001435, 2001432, 2001433, 2001430, 2001431, 2001428, 2001429, 2001426, 2001427, 2001424, 2001425, 2001422, 2001423, 2001420, 2001421, 2001418, 2001419, 2001416, 2001417, 2001414, 2001415, 2001412, 2001413, 2001410, 2001411, 2001408, 2001409, 2001448, 2001449, 2001446, 2001447, 2001444, 2001445, 2001442, 2001443, 2001440, 2001441, 2001608, 2001609, 2000028, 2000029, 2000026, 2000042, 2000126, 2000127, 2000124, 2000125, 2000122, 2000123, 2000120, 2000121, 2000118, 2000119, 2000130, 2000131, 2000128, 2000129, 2000186, 2000187, 2000184, 2000185, 2000182, 2000183, 2000180, 2000181, 2000234, 2000235, 2000232, 2000233, 2000230, 2000231, 2000228, 2000229, 2000305, 2000330, 2000414, 2000415, 2000428, 2000429, 2000426, 2000424, 2000425, 2000422, 2000423, 2000420, 2000418, 2000419, 2000416, 2000417, 2000478, 2000479, 2000476, 2000477, 2000474, 2000475, 2000472, 2000473, 2000488, 2000486, 2000487, 2000484, 2000485, 2000482, 2000483, 2000480, 2000481, 2000543, 2000540, 2000541, 2000538, 2000539, 2000536, 2000537, 2000534, 2000535, 2000532, 2000533, 2000530, 2000531, 2000528, 2000529, 2000526, 2000527, 2000524, 2000525, 2000522, 2000523, 2000520, 2000521, 2000519, 2000562, 2000563, 2000560, 2000561, 2000558, 2000559, 2000556, 2000557, 2000554, 2000555, 2000552, 2000553, 2000550, 2000551, 2000548, 2000549, 2000546, 2000547, 2000544, 2000545, 2000606, 2000607, 2000604, 2000605, 2000602, 2000603, 2000600, 2000601, 2000598, 2000599, 2000596, 2000597, 2000594, 2000595, 2000592, 2000593, 2000639, 2000636, 2000634, 2000635, 2000632, 2000633, 2000630, 2000631, 2000629, 2000612, 2000613, 2000610, 2000611, 2000608, 2000609, 2000642, 2000643, 2000640, 2000641, 2000702, 2000703, 2000700, 2000701, 2000698, 2000699, 2000696, 2000697, 2000710, 2000771, 2000858, 2000856, 2000857, 2000854, 2000855, 2000852, 2000853, 2000851, 2000848, 2000849},
                    {10, 11, 101, 114, 116, 124, 183, 184, 185, 231, 1000607, 1000606, 1000623, 1000622, 1000621, 1000620, 1000619, 1000618, 1000617, 1000616, 1000615, 1000614, 1000613, 1000612, 1000611, 1000610, 1000609, 1000608, 1000637, 1000636, 1000635, 1000634, 1000633, 1000632, 1000631, 1000630, 1000629, 1000628, 1000627, 1000626, 1000625, 1000624, 1000047, 1000046, 1000042, 1000239, 1000238, 1000237, 1000236, 1000255, 1000253, 1000251, 1000250, 1000249, 1000248, 1000247, 1000246, 1000245, 1000244, 1000257, 1000256, 1000279, 1000277, 1000276, 1000363, 1000362, 1000361, 1000354, 2000962, 2000961, 2001050, 2001051, 2001049, 2001046, 2001047, 2001044, 2001062, 2001059, 2001102, 2001103, 2001130, 2001125, 2001170, 2001168, 2001169, 2001166, 2001167, 2001165, 2001203, 2001406, 2001407, 2001404, 2001405, 2001403, 2001418, 2001419, 2001416, 2001417, 2001414, 2001415, 2001412, 2001413, 2001410, 2001411, 2001408, 2001409, 2001470, 2001471, 2001468, 2001469, 2001466, 2001467, 2001464, 2001465, 2001462, 2001463, 2001460, 2001461, 2001458, 2001459, 2001456, 2001457, 2001454, 2001455, 2001452, 2001453, 2001450, 2001451, 2001502, 2001503, 2001500, 2001501, 2001498, 2001499, 2001496, 2001497, 2001494, 2001495, 2001492, 2001493, 2001490, 2001491, 2001488, 2001489, 2001486, 2001487, 2001484, 2001485, 2001482, 2001483, 2001480, 2001481, 2001478, 2001479, 2001476, 2001477, 2001474, 2001475, 2001472, 2001473, 2001534, 2001535, 2001532, 2001533, 2001530, 2001531, 2001528, 2001529, 2001526, 2001527, 2001524, 2001525, 2001522, 2001523, 2001520, 2001521, 2001518, 2001519, 2001516, 2001517, 2001514, 2001515, 2001512, 2001513, 2001510, 2001511, 2001508, 2001509, 2001506, 2001507, 2001504, 2001505, 2001566, 2001567, 2001564, 2001565, 2001562, 2001563, 2001560, 2001561, 2001558, 2001559, 2001556, 2001557, 2001554, 2001555, 2001552, 2001553, 2001550, 2001551, 2001548, 2001549, 2001546, 2001547, 2001544, 2001545, 2001542, 2001543, 2001540, 2001541, 2001538, 2001539, 2001536, 2001537, 2001574, 2001572, 2001573, 2001570, 2001571, 2001568, 2001569, 2001724, 2000011, 2000007, 2000062, 2000063, 2000061, 2000074, 2000072, 2000073, 2000071, 2000068, 2000067, 2000064, 2000149, 2000210, 2000211, 2000208, 2000209, 2000206, 2000207, 2000204, 2000205, 2000304, 2000305, 2000292, 2000291, 2000476, 2000488, 2000486, 2000487, 2000542, 2000543, 2000540, 2000539, 2000536, 2000537, 2000534, 2000535, 2000518, 2000516, 2000517, 2000515, 2000548, 2000546, 2000547, 2000545, 2000598, 2000596, 2000597, 2000594, 2000592, 2000638, 2000639, 2000636, 2000637, 2000634, 2000632, 2000633, 2000630, 2000631, 2000658, 2000656, 2000657, 2000654, 2000655, 2000652, 2000653, 2000650, 2000651, 2000648, 2000649, 2000646, 2000647, 2000644, 2000645, 2000642, 2000641, 2000703, 2000710, 2000708, 2000798, 2000796, 2000797, 2000794, 2000795, 2000792, 2000793, 2000790, 2000791, 2000788, 2000789, 2000786, 2000787, 2000785, 2000780, 2000781, 2000778, 2000777, 2000771},
                    {8, 13, 72, 84, 85, 87, 101, 106, 186, 187, 188, 189, 190, 191, 192, 193, 194, 227, 1000639, 1000638, 1000641, 1000640, 1000670, 1000669, 1000668, 1000043, 1000042, 1000106, 1000105, 1000104, 1000285, 1000284, 1000283, 1000282, 1000280, 1000279, 1000278, 1000295, 1000294, 1000349, 1000348, 1000343, 1000338, 1000367, 1000366, 1000361, 1000357, 1000354, 1000369, 1000368, 2000964, 2000962, 2000963, 2000961, 2001050, 2001051, 2001048, 2001049, 2001046, 2001047, 2001044, 2001045, 2001091, 2001088, 2001089, 2001170, 2001168, 2001169, 2001166, 2001167, 2001165, 2001204, 2001202, 2001203, 2001200, 2001201, 2001198, 2001199, 2001197, 2001598, 2001599, 2001596, 2001597, 2001594, 2001595, 2001592, 2001593, 2001590, 2001591, 2001588, 2001589, 2001586, 2001587, 2001584, 2001585, 2001582, 2001583, 2001580, 2001581, 2001578, 2001579, 2001576, 2001577, 2001575, 2001608, 2001609, 2001606, 2001607, 2001604, 2001605, 2001602, 2001603, 2001600, 2001601, 2001676, 2000031, 2000028, 2000029, 2000026, 2000022, 2000020, 2000021, 2000018, 2000017, 2000014, 2000012, 2000013, 2000010, 2000011, 2000008, 2000009, 2000006, 2000007, 2000004, 2000005, 2000002, 2000000, 2000001, 2000058, 2000055, 2000044, 2000042, 2000043, 2000040, 2000041, 2000038, 2000039, 2000036, 2000037, 2000034, 2000035, 2000032, 2000033, 2000184, 2000185, 2000182, 2000183, 2000304, 2000305, 2000788, 2000789, 2000786, 2000787, 2000784, 2000785, 2000782, 2000771, 2000808, 2000809, 2000806, 2000807, 2000805, 2000800, 2000860, 2000861, 2000858, 2000854, 2000855, 2000852, 2000853, 2000851, 2000848, 2000849},
                    {55, 75, 104, 112, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 1000617, 1000616, 1000615, 1000614, 1000655, 1000654, 1000653, 1000652, 1000651, 1000650, 1000649, 1000648, 1000647, 1000646, 1000645, 1000644, 1000643, 1000642, 1000667, 1000666, 1000665, 1000664, 1000663, 1000662, 1000661, 1000660, 1000659, 1000658, 1000657, 1000656, 1000045, 1000044, 1000043, 1000042, 1000107, 1000106, 1000105, 1000104, 1000251, 1000250, 1000249, 1000248, 1000303, 1000302, 1000301, 1000300, 1000297, 1000296, 1000313, 1000312, 1000311, 1000310, 1000309, 1000308, 1000307, 1000306, 1000305, 1000304, 1000335, 1000334, 1000333, 1000332, 1000327, 1000326, 1000325, 1000324, 1000322, 1000321, 1000320, 2000926, 2000927, 2000920, 2000918, 2000917, 2000952, 2000950, 2000949, 2000943, 2000940, 2000941, 2000939, 2000934, 2000930, 2000931, 2000928, 2000929, 2000988, 2000989, 2000964, 2000963, 2000960, 2001050, 2001051, 2001046, 2001047, 2001044, 2001045, 2001079, 2001076, 2001077, 2001074, 2001075, 2001072, 2001073, 2001071, 2001069, 2001062, 2001061, 2001102, 2001103, 2001144, 2001145, 2001143, 2001130, 2001208, 2001202, 2001203, 2001200, 2001201, 2001198, 2001197, 2001496, 2001494, 2001495, 2001492, 2001490, 2001491, 2001488, 2001599, 2001597, 2001630, 2001631, 2001628, 2001629, 2001626, 2001627, 2001624, 2001625, 2001622, 2001623, 2001620, 2001621, 2001618, 2001619, 2001616, 2001617, 2001614, 2001615, 2001612, 2001613, 2001610, 2001611, 2001607, 2001604, 2001602, 2001603, 2001600, 2001662, 2001663, 2001660, 2001661, 2001658, 2001659, 2001656, 2001657, 2001654, 2001655, 2001652, 2001653, 2001650, 2001651, 2001648, 2001649, 2001646, 2001647, 2001644, 2001645, 2001642, 2001643, 2001640, 2001641, 2001638, 2001639, 2001636, 2001637, 2001634, 2001635, 2001632, 2001633, 2001694, 2001695, 2001692, 2001693, 2001690, 2001691, 2001688, 2001689, 2001686, 2001687, 2001684, 2001685, 2001682, 2001683, 2001680, 2001681, 2001678, 2001679, 2001676, 2001677, 2001674, 2001675, 2001672, 2001673, 2001670, 2001671, 2001668, 2001669, 2001666, 2001667, 2001664, 2001665, 2001700, 2001698, 2001699, 2001696, 2001697, 2000031, 2000028, 2000029, 2000026, 2000022, 2000023, 2000020, 2000021, 2000019, 2000014, 2000012, 2000013, 2000011, 2000045, 2000042, 2000040, 2000039, 2000036, 2000035, 2000032, 2000033, 2000195, 2000286, 2000287, 2000284, 2000285, 2000304, 2000305, 2000444, 2000438, 2000436, 2000437, 2000434, 2000435, 2000796, 2000794, 2000795, 2000788, 2000789, 2000786, 2000787, 2000784, 2000785, 2000782, 2000783, 2000771, 2000810, 2000808, 2000809, 2000806, 2000807, 2000805},
                    {10, 34, 55, 80, 81, 84, 85, 86, 101, 118, 171, 191, 206, 207, 208, 209, 210, 211, 1000671, 1000670, 1000669, 1000668, 1000047, 1000046, 1000045, 1000044, 1000043, 1000042, 1000107, 1000106, 1000105, 1000104, 1000280, 1000279, 1000278, 1000290, 1000349, 1000348, 1000345, 1000344, 1000343, 1000342, 1000339, 1000338, 1000361, 1000357, 1000354, 2000990, 2000991, 2000964, 2000962, 2000963, 2000961, 2001018, 2001019, 2001016, 2001017, 2001014, 2001015, 2001012, 2001013, 2001010, 2001011, 2001050, 2001051, 2001049, 2001046, 2001047, 2001044, 2001045, 2001145, 2001170, 2001168, 2001169, 2001166, 2001167, 2001165, 2001204, 2001202, 2001203, 2001200, 2001201, 2001198, 2001199, 2001197, 2001276, 2001274, 2001272, 2001273, 2001270, 2001271, 2001268, 2001269, 2001267, 2001710, 2001708, 2001709, 2001706, 2001707, 2001704, 2001705, 2001702, 2001703, 2001701, 2000028, 2000029, 2000026, 2000024, 2000025, 2000022, 2000023, 2000020, 2000021, 2000018, 2000019, 2000017, 2000014, 2000013, 2000010, 2000042, 2000040, 2000039, 2000304, 2000305, 2000294, 2000293, 2000788, 2000789, 2000786, 2000787, 2000784, 2000785, 2000771, 2000806, 2000805},
                    {10, 55, 82, 116, 202, 208, 212, 213, 214, 215, 216, 217, 1000607, 1000606, 1000609, 1000608, 1000687, 1000686, 1000685, 1000684, 1000683, 1000682, 1000681, 1000680, 1000679, 1000678, 1000677, 1000676, 1000675, 1000674, 1000673, 1000672, 1000699, 1000698, 1000697, 1000696, 1000695, 1000694, 1000693, 1000692, 1000691, 1000690, 1000689, 1000688, 1000047, 1000046, 1000043, 1000042, 1000105, 1000104, 1000277, 1000276, 1000295, 1000294, 1000351, 1000350, 1000363, 1000362, 2000918, 2000919, 2000916, 2000942, 2000941, 2000995, 2001050, 2001051, 2001046, 2001047, 2001044, 2001045, 2001043, 2001079, 2001076, 2001077, 2001075, 2001072, 2001073, 2001070, 2001071, 2001069, 2001168, 2001169, 2001166, 2001167, 2001165, 2001202, 2001203, 2001200, 2001201, 2001198, 2001199, 2001197, 2001503, 2001505, 2001652, 2001650, 2001651, 2001649, 2001726, 2001727, 2001724, 2001725, 2001722, 2001723, 2001720, 2001721, 2001718, 2001719, 2001716, 2001717, 2001714, 2001715, 2001712, 2001713, 2001711, 2001736, 2001734, 2001735, 2001732, 2001733, 2001730, 2001731, 2001728, 2001729, 2000028, 2000029, 2000024, 2000025, 2000020, 2000021, 2000014, 2000012, 2000013, 2000010, 2000011, 2000002, 2000001, 2000058, 2000054, 2000055, 2000050, 2000051, 2000126, 2000127, 2000125, 2000122, 2000123, 2000120, 2000121, 2000119, 2000130, 2000131, 2000305, 2000294, 2000293, 2000771, 2000808, 2000809, 2000806, 2000807, 2000858, 2000859, 2000856, 2000854, 2000855, 2000852, 2000850, 2000851, 2000848, 2000849},
                    {10, 11, 79, 101, 104, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 1000669, 1000668, 1000703, 1000702, 1000701, 1000700, 1000719, 1000718, 1000717, 1000716, 1000715, 1000714, 1000713, 1000712, 1000711, 1000710, 1000709, 1000708, 1000707, 1000706, 1000705, 1000704, 1000735, 1000734, 1000733, 1000732, 1000731, 1000730, 1000729, 1000728, 1000727, 1000726, 1000725, 1000724, 1000723, 1000722, 1000721, 1000720, 1000751, 1000750, 1000749, 1000748, 1000747, 1000746, 1000745, 1000744, 1000743, 1000742, 1000741, 1000740, 1000739, 1000738, 1000737, 1000736, 1000767, 1000766, 1000765, 1000764, 1000763, 1000762, 1000761, 1000760, 1000759, 1000758, 1000757, 1000756, 1000755, 1000754, 1000753, 1000752, 1000783, 1000782, 1000781, 1000780, 1000779, 1000778, 1000777, 1000776, 1000775, 1000774, 1000773, 1000772, 1000771, 1000770, 1000769, 1000768, 1000785, 1000784, 1000043, 1000042, 1000183, 1000182, 1000181, 1000180, 1000279, 1000361, 1000354, 1000389, 1000388, 1000387, 1000386, 1000384, 1000425, 1000424, 1000423, 1000422, 2000964, 2000962, 2000963, 2000961, 2001062, 2001060, 2001061, 2001059, 2001103, 2001100, 2001101, 2001098, 2001099, 2001170, 2001168, 2001166, 2001167, 2001165, 2001584, 2001585, 2001582, 2001580, 2001581, 2001578, 2001579, 2001576, 2001577, 2001575, 2001758, 2001759, 2001756, 2001757, 2001754, 2001755, 2001752, 2001753, 2001750, 2001751, 2001748, 2001749, 2001746, 2001747, 2001744, 2001745, 2001742, 2001743, 2001740, 2001741, 2001738, 2001739, 2001737, 2001790, 2001791, 2001788, 2001789, 2001786, 2001787, 2001784, 2001785, 2001782, 2001783, 2001780, 2001781, 2001778, 2001779, 2001776, 2001777, 2001774, 2001775, 2001772, 2001773, 2001770, 2001771, 2001768, 2001769, 2001766, 2001767, 2001764, 2001765, 2001762, 2001763, 2001760, 2001761, 2001806, 2001807, 2001804, 2001805, 2001802, 2001803, 2001800, 2001801, 2001798, 2001799, 2001796, 2001797, 2001794, 2001795, 2001792, 2001793, 2000028, 2000029, 2000027, 2000023, 2000018, 2000019, 2000017, 2000014, 2000015, 2000010, 2000011, 2000009, 2000006, 2000007, 2000005, 2000002, 2000001},};
        int[][] complejas = {{0, 8, 10, 89, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 1000479, 1000478, 1000495, 1000494, 1000493, 1000492, 1000491, 1000490, 1000489, 1000488, 1000487, 1000486, 1000485, 1000484, 1000483, 1000482, 1000481, 1000480, 1000509, 1000508, 1000507, 1000506, 1000505, 1000504, 1000503, 1000502, 1000501, 1000500, 1000499, 1000498, 1000497, 1000496, 1000015, 1000014, 1000013, 1000012, 1000011, 1000010, 1000009, 1000008, 1000007, 1000006, 1000005, 1000004, 1000003, 1000002, 1000001, 1000000, 1000043, 1000042, 1000041, 1000040, 1000105, 1000104, 1000279, 1000278, 2000990, 2000991, 2000964, 2000962, 2000963, 2000961, 2001019, 2001053, 2001050, 2001051, 2001049, 2001046, 2001047, 2001044, 2001045, 2001061, 2001102, 2001103, 2001100, 2001101, 2001098, 2001099, 2001144, 2001145, 2001143, 2001214, 2001215, 2001212, 2001213, 2001210, 2001211, 2001208, 2001209, 2001206, 2001207, 2001204, 2001205, 2001202, 2001203, 2001200, 2001201, 2001198, 2001199, 2001197, 2001246, 2001247, 2001244, 2001245, 2001242, 2001243, 2001240, 2001241, 2001238, 2001239, 2001236, 2001237, 2001234, 2001235, 2001232, 2001233, 2001230, 2001231, 2001228, 2001229, 2001226, 2001227, 2001224, 2001225, 2001222, 2001223, 2001220, 2001221, 2001218, 2001219, 2001216, 2001217, 2001276, 2001274, 2001275, 2001272, 2001273, 2001270, 2001271, 2001268, 2001269, 2001266, 2001267, 2001264, 2001265, 2001262, 2001263, 2001260, 2001261, 2001258, 2001259, 2001256, 2001257, 2001254, 2001255, 2001252, 2001253, 2001250, 2001251, 2001248, 2001249, 2001676, 2001758, 2001759, 2001756, 2001757, 2001754, 2001755, 2001752, 2001753, 2001750, 2001751, 2001790, 2001791, 2001788, 2001789, 2001786, 2001787, 2001784, 2001785, 2001782, 2001783, 2001780, 2001781, 2001778, 2001779, 2001776, 2001777, 2001774, 2001775, 2001772, 2001773, 2001770, 2001771, 2001768, 2001769, 2001766, 2001767, 2001764, 2001765, 2001762, 2001763, 2001760, 2001761, 2001822, 2001823, 2001820, 2001821, 2001818, 2001819, 2001816, 2001817, 2001814, 2001815, 2001812, 2001813, 2001810, 2001811, 2001808, 2001809, 2001806, 2001807, 2001804, 2001805, 2001802, 2001803, 2001800, 2001801, 2001798, 2001799, 2001796, 2001797, 2001794, 2001795, 2001792, 2001793, 2001834, 2001835, 2001832, 2001833, 2001830, 2001831, 2001828, 2001829, 2001826, 2001827, 2001824, 2001825, 2000030, 2000028, 2000029, 2000026, 2000027, 2000022, 2000023, 2000018, 2000019, 2000017, 2000014, 2000015, 2000012, 2000013, 2000010, 2000011, 2000008, 2000009, 2000006, 2000007, 2000004, 2000005, 2000002, 2000000, 2000001, 2000059, 2000057, 2000054, 2000055, 2000050, 2000051, 2000045, 2000042, 2000146, 2000147, 2000144, 2000145, 2000142, 2000143, 2000140, 2000141, 2000138, 2000139, 2000136, 2000137, 2000134, 2000135, 2000304, 2000305, 2000788, 2000789, 2000786, 2000787, 2000784, 2000785, 2000771, 2000806, 2000805},
        {34, 82, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 1000511, 1000510, 1000527, 1000526, 1000525, 1000524, 1000523, 1000522, 1000521, 1000520, 1000519, 1000518, 1000517, 1000516, 1000515, 1000514, 1000513, 1000512, 1000541, 1000540, 1000539, 1000538, 1000537, 1000536, 1000535, 1000534, 1000533, 1000532, 1000531, 1000530, 1000529, 1000528, 1000668, 1000042, 1000055, 1000054, 1000053, 1000052, 1000051, 1000050, 1000049, 1000048, 1000067, 1000066, 1000065, 1000064, 1000083, 1000082, 1000081, 1000080, 1000106, 1000103, 1000102, 1000101, 1000100, 1000279, 1000278, 1000361, 1000359, 1000358, 1000354, 2001278, 2001279, 2001277, 2001300, 2001298, 2001299, 2001296, 2001297, 2001294, 2001295, 2001292, 2001293, 2001290, 2001291, 2001288, 2001289, 2001286, 2001287, 2001284, 2001285, 2001282, 2001283, 2001280, 2001281, 2001326, 2001324, 2001325, 2000158, 2000159, 2000156, 2000157, 2000149, 2000188, 2000178, 2000179, 2000176, 2000177, 2000174, 2000175, 2000172, 2000173, 2000170, 2000171, 2000168, 2000169, 2000166, 2000167, 2000164, 2000165, 2000162, 2000163, 2000160, 2000161, 2000222, 2000223, 2000220, 2000221, 2000218, 2000219, 2000216, 2000217, 2000214, 2000215, 2000212, 2000213, 2000210, 2000211, 2000208, 2000209, 2000206, 2000207, 2000204, 2000205, 2000202, 2000201, 2000197, 2000195, 2000250, 2000251, 2000248, 2000244, 2000245, 2000242, 2000243, 2000238, 2000239, 2000236, 2000237, 2000226, 2000227, 2000224, 2000225, 2000286, 2000287, 2000284, 2000285, 2000288, 2000372, 2000373},
        {8, 10, 55, 56, 100, 114, 118, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 1000543, 1000542, 1000559, 1000558, 1000557, 1000556, 1000555, 1000554, 1000553, 1000552, 1000551, 1000550, 1000549, 1000548, 1000547, 1000546, 1000545, 1000544, 1000573, 1000572, 1000571, 1000570, 1000569, 1000568, 1000567, 1000566, 1000565, 1000564, 1000563, 1000562, 1000561, 1000560, 1000617, 1000616, 1000615, 1000614, 1000047, 1000046, 1000045, 1000044, 1000043, 1000042, 1000109, 1000119, 1000118, 1000116, 1000115, 1000114, 1000113, 1000112, 1000139, 1000138, 1000136, 1000135, 1000134, 1000133, 1000132, 1000159, 1000158, 1000157, 1000156, 1000151, 1000150, 1000149, 1000148, 1000147, 1000146, 1000145, 1000144, 1000187, 1000186, 1000183, 1000182, 1000181, 1000180, 1000365, 1000364, 1000363, 1000362, 2000942, 2000941, 2001062, 2001060, 2001061, 2001059, 2001144, 2001145, 2001143, 2001208, 2001202, 2001201, 2001198, 2001197, 2001310, 2001311, 2001308, 2001309, 2001306, 2001307, 2001304, 2001305, 2001302, 2001303, 2001300, 2001301, 2001298, 2001299, 2001296, 2001297, 2001294, 2001295, 2001293, 2001342, 2001343, 2001340, 2001341, 2001338, 2001339, 2001336, 2001337, 2001334, 2001335, 2001332, 2001333, 2001330, 2001331, 2001328, 2001329, 2001326, 2001327, 2001324, 2001325, 2001322, 2001323, 2001320, 2001321, 2001318, 2001319, 2001316, 2001317, 2001314, 2001315, 2001312, 2001313, 2001374, 2001375, 2001372, 2001373, 2001370, 2001371, 2001368, 2001369, 2001366, 2001367, 2001364, 2001365, 2001362, 2001363, 2001360, 2001361, 2001358, 2001359, 2001356, 2001357, 2001354, 2001355, 2001352, 2001353, 2001350, 2001351, 2001348, 2001349, 2001346, 2001347, 2001344, 2001345, 2001402, 2001400, 2001399, 2001396, 2001394, 2001393, 2001380, 2001378, 2001379, 2001376, 2001377, 2000031, 2000028, 2000029, 2000014, 2000012, 2000011, 2000007, 2000000, 2000062, 2000063, 2000044, 2000045, 2000042, 2000043, 2000040, 2000038, 2000039, 2000036, 2000034, 2000035, 2000286, 2000287, 2000284, 2000318, 2000319, 2000316, 2000317, 2000315, 2000310, 2000311, 2000308, 2000309, 2000306, 2000307, 2000296, 2000294, 2000295, 2000292, 2000293, 2000290, 2000291, 2000288, 2000289, 2000344, 2000345, 2000342, 2000343, 2000340, 2000341, 2000338, 2000339, 2000330, 2000322, 2000323, 2000320, 2000321, 2000369, 2000366, 2000398, 2000396, 2000397, 2000394, 2000395, 2000392, 2000393, 2000391, 2000428, 2000429, 2000426, 2000424, 2000425, 2000422, 2000423, 2000786, 2000787, 2000784, 2000785, 2000809, 2000806, 2000805, 2000858, 2000852},
        {8, 9, 10, 58, 59, 60, 64, 65, 66, 68, 69, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 1000575, 1000574, 1000591, 1000590, 1000589, 1000588, 1000587, 1000586, 1000585, 1000584, 1000583, 1000582, 1000581, 1000580, 1000579, 1000578, 1000577, 1000576, 1000605, 1000604, 1000603, 1000602, 1000601, 1000600, 1000599, 1000598, 1000597, 1000596, 1000595, 1000594, 1000593, 1000592, 1000191, 1000190, 1000189, 1000188, 1000185, 1000184, 1000207, 1000206, 1000205, 1000204, 1000203, 1000201, 1000199, 1000198, 1000197, 1000196, 1000233, 1000232, 1000231, 1000230, 1000229, 1000228, 2001050, 2001051, 2001046, 2001047, 2001044, 2001045, 2001202, 2001203, 2001201, 2001197, 2001342, 2001343, 2001340, 2001341, 2001339, 2001362, 2001363, 2001360, 2001361, 2001358, 2001359, 2001356, 2001357, 2001344, 2001406, 2001407, 2001404, 2001405, 2001402, 2001403, 2001400, 2001401, 2001398, 2001399, 2001396, 2001397, 2001394, 2001395, 2001392, 2001393, 2001390, 2001391, 2001388, 2001389, 2001386, 2001387, 2001384, 2001385, 2001382, 2001383, 2001380, 2001381, 2001379, 2001438, 2001439, 2001436, 2001437, 2001434, 2001435, 2001432, 2001433, 2001430, 2001431, 2001428, 2001429, 2001426, 2001427, 2001424, 2001425, 2001422, 2001423, 2001420, 2001421, 2001418, 2001419, 2001416, 2001417, 2001414, 2001415, 2001412, 2001413, 2001410, 2001411, 2001408, 2001409, 2001448, 2001449, 2001446, 2001447, 2001444, 2001445, 2001442, 2001443, 2001440, 2001441, 2001608, 2001609, 2000028, 2000029, 2000026, 2000042, 2000126, 2000127, 2000124, 2000125, 2000122, 2000123, 2000120, 2000121, 2000118, 2000119, 2000130, 2000131, 2000128, 2000129, 2000186, 2000187, 2000184, 2000185, 2000182, 2000183, 2000180, 2000181, 2000234, 2000235, 2000232, 2000233, 2000230, 2000231, 2000228, 2000229, 2000305, 2000330, 2000414, 2000415, 2000428, 2000429, 2000426, 2000424, 2000425, 2000422, 2000423, 2000420, 2000418, 2000419, 2000416, 2000417, 2000478, 2000479, 2000476, 2000477, 2000474, 2000475, 2000472, 2000473, 2000488, 2000486, 2000487, 2000484, 2000485, 2000482, 2000483, 2000480, 2000481, 2000543, 2000540, 2000541, 2000538, 2000539, 2000536, 2000537, 2000534, 2000535, 2000532, 2000533, 2000530, 2000531, 2000528, 2000529, 2000526, 2000527, 2000524, 2000525, 2000522, 2000523, 2000520, 2000521, 2000519, 2000562, 2000563, 2000560, 2000561, 2000558, 2000559, 2000556, 2000557, 2000554, 2000555, 2000552, 2000553, 2000550, 2000551, 2000548, 2000549, 2000546, 2000547, 2000544, 2000545, 2000606, 2000607, 2000604, 2000605, 2000602, 2000603, 2000600, 2000601, 2000598, 2000599, 2000596, 2000597, 2000594, 2000595, 2000592, 2000593, 2000639, 2000636, 2000634, 2000635, 2000632, 2000633, 2000630, 2000631, 2000629, 2000612, 2000613, 2000610, 2000611, 2000608, 2000609, 2000642, 2000643, 2000640, 2000641, 2000702, 2000703, 2000700, 2000701, 2000698, 2000699, 2000696, 2000697, 2000710, 2000771, 2000858, 2000856, 2000857, 2000854, 2000855, 2000852, 2000853, 2000851, 2000848, 2000849},
        {10, 11, 101, 114, 116, 124, 183, 184, 185, 231, 1000607, 1000606, 1000623, 1000622, 1000621, 1000620, 1000619, 1000618, 1000617, 1000616, 1000615, 1000614, 1000613, 1000612, 1000611, 1000610, 1000609, 1000608, 1000637, 1000636, 1000635, 1000634, 1000633, 1000632, 1000631, 1000630, 1000629, 1000628, 1000627, 1000626, 1000625, 1000624, 1000047, 1000046, 1000042, 1000239, 1000238, 1000237, 1000236, 1000255, 1000253, 1000251, 1000250, 1000249, 1000248, 1000247, 1000246, 1000245, 1000244, 1000257, 1000256, 1000279, 1000277, 1000276, 1000363, 1000362, 1000361, 1000354, 2000962, 2000961, 2001050, 2001051, 2001049, 2001046, 2001047, 2001044, 2001062, 2001059, 2001102, 2001103, 2001130, 2001125, 2001170, 2001168, 2001169, 2001166, 2001167, 2001165, 2001203, 2001406, 2001407, 2001404, 2001405, 2001403, 2001418, 2001419, 2001416, 2001417, 2001414, 2001415, 2001412, 2001413, 2001410, 2001411, 2001408, 2001409, 2001470, 2001471, 2001468, 2001469, 2001466, 2001467, 2001464, 2001465, 2001462, 2001463, 2001460, 2001461, 2001458, 2001459, 2001456, 2001457, 2001454, 2001455, 2001452, 2001453, 2001450, 2001451, 2001502, 2001503, 2001500, 2001501, 2001498, 2001499, 2001496, 2001497, 2001494, 2001495, 2001492, 2001493, 2001490, 2001491, 2001488, 2001489, 2001486, 2001487, 2001484, 2001485, 2001482, 2001483, 2001480, 2001481, 2001478, 2001479, 2001476, 2001477, 2001474, 2001475, 2001472, 2001473, 2001534, 2001535, 2001532, 2001533, 2001530, 2001531, 2001528, 2001529, 2001526, 2001527, 2001524, 2001525, 2001522, 2001523, 2001520, 2001521, 2001518, 2001519, 2001516, 2001517, 2001514, 2001515, 2001512, 2001513, 2001510, 2001511, 2001508, 2001509, 2001506, 2001507, 2001504, 2001505, 2001566, 2001567, 2001564, 2001565, 2001562, 2001563, 2001560, 2001561, 2001558, 2001559, 2001556, 2001557, 2001554, 2001555, 2001552, 2001553, 2001550, 2001551, 2001548, 2001549, 2001546, 2001547, 2001544, 2001545, 2001542, 2001543, 2001540, 2001541, 2001538, 2001539, 2001536, 2001537, 2001574, 2001572, 2001573, 2001570, 2001571, 2001568, 2001569, 2001724, 2000011, 2000007, 2000062, 2000063, 2000061, 2000074, 2000072, 2000073, 2000071, 2000068, 2000067, 2000064, 2000149, 2000210, 2000211, 2000208, 2000209, 2000206, 2000207, 2000204, 2000205, 2000304, 2000305, 2000292, 2000291, 2000476, 2000488, 2000486, 2000487, 2000542, 2000543, 2000540, 2000539, 2000536, 2000537, 2000534, 2000535, 2000518, 2000516, 2000517, 2000515, 2000548, 2000546, 2000547, 2000545, 2000598, 2000596, 2000597, 2000594, 2000592, 2000638, 2000639, 2000636, 2000637, 2000634, 2000632, 2000633, 2000630, 2000631, 2000658, 2000656, 2000657, 2000654, 2000655, 2000652, 2000653, 2000650, 2000651, 2000648, 2000649, 2000646, 2000647, 2000644, 2000645, 2000642, 2000641, 2000703, 2000710, 2000708, 2000798, 2000796, 2000797, 2000794, 2000795, 2000792, 2000793, 2000790, 2000791, 2000788, 2000789, 2000786, 2000787, 2000785, 2000780, 2000781, 2000778, 2000777, 2000771},
        {8, 13, 72, 84, 85, 87, 101, 106, 186, 187, 188, 189, 190, 191, 192, 193, 194, 227, 1000639, 1000638, 1000641, 1000640, 1000670, 1000669, 1000668, 1000043, 1000042, 1000106, 1000105, 1000104, 1000285, 1000284, 1000283, 1000282, 1000280, 1000279, 1000278, 1000295, 1000294, 1000349, 1000348, 1000343, 1000338, 1000367, 1000366, 1000361, 1000357, 1000354, 1000369, 1000368, 2000964, 2000962, 2000963, 2000961, 2001050, 2001051, 2001048, 2001049, 2001046, 2001047, 2001044, 2001045, 2001091, 2001088, 2001089, 2001170, 2001168, 2001169, 2001166, 2001167, 2001165, 2001204, 2001202, 2001203, 2001200, 2001201, 2001198, 2001199, 2001197, 2001598, 2001599, 2001596, 2001597, 2001594, 2001595, 2001592, 2001593, 2001590, 2001591, 2001588, 2001589, 2001586, 2001587, 2001584, 2001585, 2001582, 2001583, 2001580, 2001581, 2001578, 2001579, 2001576, 2001577, 2001575, 2001608, 2001609, 2001606, 2001607, 2001604, 2001605, 2001602, 2001603, 2001600, 2001601, 2001676, 2000031, 2000028, 2000029, 2000026, 2000022, 2000020, 2000021, 2000018, 2000017, 2000014, 2000012, 2000013, 2000010, 2000011, 2000008, 2000009, 2000006, 2000007, 2000004, 2000005, 2000002, 2000000, 2000001, 2000058, 2000055, 2000044, 2000042, 2000043, 2000040, 2000041, 2000038, 2000039, 2000036, 2000037, 2000034, 2000035, 2000032, 2000033, 2000184, 2000185, 2000182, 2000183, 2000304, 2000305, 2000788, 2000789, 2000786, 2000787, 2000784, 2000785, 2000782, 2000771, 2000808, 2000809, 2000806, 2000807, 2000805, 2000800, 2000860, 2000861, 2000858, 2000854, 2000855, 2000852, 2000853, 2000851, 2000848, 2000849},
        {55, 75, 104, 112, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 1000617, 1000616, 1000615, 1000614, 1000655, 1000654, 1000653, 1000652, 1000651, 1000650, 1000649, 1000648, 1000647, 1000646, 1000645, 1000644, 1000643, 1000642, 1000667, 1000666, 1000665, 1000664, 1000663, 1000662, 1000661, 1000660, 1000659, 1000658, 1000657, 1000656, 1000045, 1000044, 1000043, 1000042, 1000107, 1000106, 1000105, 1000104, 1000251, 1000250, 1000249, 1000248, 1000303, 1000302, 1000301, 1000300, 1000297, 1000296, 1000313, 1000312, 1000311, 1000310, 1000309, 1000308, 1000307, 1000306, 1000305, 1000304, 1000335, 1000334, 1000333, 1000332, 1000327, 1000326, 1000325, 1000324, 1000322, 1000321, 1000320, 2000926, 2000927, 2000920, 2000918, 2000917, 2000952, 2000950, 2000949, 2000943, 2000940, 2000941, 2000939, 2000934, 2000930, 2000931, 2000928, 2000929, 2000988, 2000989, 2000964, 2000963, 2000960, 2001050, 2001051, 2001046, 2001047, 2001044, 2001045, 2001079, 2001076, 2001077, 2001074, 2001075, 2001072, 2001073, 2001071, 2001069, 2001062, 2001061, 2001102, 2001103, 2001144, 2001145, 2001143, 2001130, 2001208, 2001202, 2001203, 2001200, 2001201, 2001198, 2001197, 2001496, 2001494, 2001495, 2001492, 2001490, 2001491, 2001488, 2001599, 2001597, 2001630, 2001631, 2001628, 2001629, 2001626, 2001627, 2001624, 2001625, 2001622, 2001623, 2001620, 2001621, 2001618, 2001619, 2001616, 2001617, 2001614, 2001615, 2001612, 2001613, 2001610, 2001611, 2001607, 2001604, 2001602, 2001603, 2001600, 2001662, 2001663, 2001660, 2001661, 2001658, 2001659, 2001656, 2001657, 2001654, 2001655, 2001652, 2001653, 2001650, 2001651, 2001648, 2001649, 2001646, 2001647, 2001644, 2001645, 2001642, 2001643, 2001640, 2001641, 2001638, 2001639, 2001636, 2001637, 2001634, 2001635, 2001632, 2001633, 2001694, 2001695, 2001692, 2001693, 2001690, 2001691, 2001688, 2001689, 2001686, 2001687, 2001684, 2001685, 2001682, 2001683, 2001680, 2001681, 2001678, 2001679, 2001676, 2001677, 2001674, 2001675, 2001672, 2001673, 2001670, 2001671, 2001668, 2001669, 2001666, 2001667, 2001664, 2001665, 2001700, 2001698, 2001699, 2001696, 2001697, 2000031, 2000028, 2000029, 2000026, 2000022, 2000023, 2000020, 2000021, 2000019, 2000014, 2000012, 2000013, 2000011, 2000045, 2000042, 2000040, 2000039, 2000036, 2000035, 2000032, 2000033, 2000195, 2000286, 2000287, 2000284, 2000285, 2000304, 2000305, 2000444, 2000438, 2000436, 2000437, 2000434, 2000435, 2000796, 2000794, 2000795, 2000788, 2000789, 2000786, 2000787, 2000784, 2000785, 2000782, 2000783, 2000771, 2000810, 2000808, 2000809, 2000806, 2000807, 2000805},
        {10, 34, 55, 80, 81, 84, 85, 86, 101, 118, 171, 191, 206, 207, 208, 209, 210, 211, 1000671, 1000670, 1000669, 1000668, 1000047, 1000046, 1000045, 1000044, 1000043, 1000042, 1000107, 1000106, 1000105, 1000104, 1000280, 1000279, 1000278, 1000290, 1000349, 1000348, 1000345, 1000344, 1000343, 1000342, 1000339, 1000338, 1000361, 1000357, 1000354, 2000990, 2000991, 2000964, 2000962, 2000963, 2000961, 2001018, 2001019, 2001016, 2001017, 2001014, 2001015, 2001012, 2001013, 2001010, 2001011, 2001050, 2001051, 2001049, 2001046, 2001047, 2001044, 2001045, 2001145, 2001170, 2001168, 2001169, 2001166, 2001167, 2001165, 2001204, 2001202, 2001203, 2001200, 2001201, 2001198, 2001199, 2001197, 2001276, 2001274, 2001272, 2001273, 2001270, 2001271, 2001268, 2001269, 2001267, 2001710, 2001708, 2001709, 2001706, 2001707, 2001704, 2001705, 2001702, 2001703, 2001701, 2000028, 2000029, 2000026, 2000024, 2000025, 2000022, 2000023, 2000020, 2000021, 2000018, 2000019, 2000017, 2000014, 2000013, 2000010, 2000042, 2000040, 2000039, 2000304, 2000305, 2000294, 2000293, 2000788, 2000789, 2000786, 2000787, 2000784, 2000785, 2000771, 2000806, 2000805},
        {10, 55, 82, 116, 202, 208, 212, 213, 214, 215, 216, 217, 1000607, 1000606, 1000609, 1000608, 1000687, 1000686, 1000685, 1000684, 1000683, 1000682, 1000681, 1000680, 1000679, 1000678, 1000677, 1000676, 1000675, 1000674, 1000673, 1000672, 1000699, 1000698, 1000697, 1000696, 1000695, 1000694, 1000693, 1000692, 1000691, 1000690, 1000689, 1000688, 1000047, 1000046, 1000043, 1000042, 1000105, 1000104, 1000277, 1000276, 1000295, 1000294, 1000351, 1000350, 1000363, 1000362, 2000918, 2000919, 2000916, 2000942, 2000941, 2000995, 2001050, 2001051, 2001046, 2001047, 2001044, 2001045, 2001043, 2001079, 2001076, 2001077, 2001075, 2001072, 2001073, 2001070, 2001071, 2001069, 2001168, 2001169, 2001166, 2001167, 2001165, 2001202, 2001203, 2001200, 2001201, 2001198, 2001199, 2001197, 2001503, 2001505, 2001652, 2001650, 2001651, 2001649, 2001726, 2001727, 2001724, 2001725, 2001722, 2001723, 2001720, 2001721, 2001718, 2001719, 2001716, 2001717, 2001714, 2001715, 2001712, 2001713, 2001711, 2001736, 2001734, 2001735, 2001732, 2001733, 2001730, 2001731, 2001728, 2001729, 2000028, 2000029, 2000024, 2000025, 2000020, 2000021, 2000014, 2000012, 2000013, 2000010, 2000011, 2000002, 2000001, 2000058, 2000054, 2000055, 2000050, 2000051, 2000126, 2000127, 2000125, 2000122, 2000123, 2000120, 2000121, 2000119, 2000130, 2000131, 2000305, 2000294, 2000293, 2000771, 2000808, 2000809, 2000806, 2000807, 2000858, 2000859, 2000856, 2000854, 2000855, 2000852, 2000850, 2000851, 2000848, 2000849},
        {10, 11, 79, 101, 104, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 1000669, 1000668, 1000703, 1000702, 1000701, 1000700, 1000719, 1000718, 1000717, 1000716, 1000715, 1000714, 1000713, 1000712, 1000711, 1000710, 1000709, 1000708, 1000707, 1000706, 1000705, 1000704, 1000735, 1000734, 1000733, 1000732, 1000731, 1000730, 1000729, 1000728, 1000727, 1000726, 1000725, 1000724, 1000723, 1000722, 1000721, 1000720, 1000751, 1000750, 1000749, 1000748, 1000747, 1000746, 1000745, 1000744, 1000743, 1000742, 1000741, 1000740, 1000739, 1000738, 1000737, 1000736, 1000767, 1000766, 1000765, 1000764, 1000763, 1000762, 1000761, 1000760, 1000759, 1000758, 1000757, 1000756, 1000755, 1000754, 1000753, 1000752, 1000783, 1000782, 1000781, 1000780, 1000779, 1000778, 1000777, 1000776, 1000775, 1000774, 1000773, 1000772, 1000771, 1000770, 1000769, 1000768, 1000785, 1000784, 1000043, 1000042, 1000183, 1000182, 1000181, 1000180, 1000279, 1000361, 1000354, 1000389, 1000388, 1000387, 1000386, 1000384, 1000425, 1000424, 1000423, 1000422, 2000964, 2000962, 2000963, 2000961, 2001062, 2001060, 2001061, 2001059, 2001103, 2001100, 2001101, 2001098, 2001099, 2001170, 2001168, 2001166, 2001167, 2001165, 2001584, 2001585, 2001582, 2001580, 2001581, 2001578, 2001579, 2001576, 2001577, 2001575, 2001758, 2001759, 2001756, 2001757, 2001754, 2001755, 2001752, 2001753, 2001750, 2001751, 2001748, 2001749, 2001746, 2001747, 2001744, 2001745, 2001742, 2001743, 2001740, 2001741, 2001738, 2001739, 2001737, 2001790, 2001791, 2001788, 2001789, 2001786, 2001787, 2001784, 2001785, 2001782, 2001783, 2001780, 2001781, 2001778, 2001779, 2001776, 2001777, 2001774, 2001775, 2001772, 2001773, 2001770, 2001771, 2001768, 2001769, 2001766, 2001767, 2001764, 2001765, 2001762, 2001763, 2001760, 2001761, 2001806, 2001807, 2001804, 2001805, 2001802, 2001803, 2001800, 2001801, 2001798, 2001799, 2001796, 2001797, 2001794, 2001795, 2001792, 2001793, 2000028, 2000029, 2000027, 2000023, 2000018, 2000019, 2000017, 2000014, 2000015, 2000010, 2000011, 2000009, 2000006, 2000007, 2000005, 2000002, 2000001},};
        double[][] total = new double[SystemConfig.MAX_EXTERNAL_SAMPLES][SystemConfig.MAX_EXTERNAL_SAMPLES];
        if (SystemConfig.CHECK_ALL) {
            double[][][] diff = new double[3][SystemConfig.MAX_EXTERNAL_SAMPLES][SystemConfig.MAX_EXTERNAL_SAMPLES];
            for (int k = 0; k < 3; k++) {
                for (int i = 0; i < SystemConfig.MAX_EXTERNAL_SAMPLES; i++) {
                    for (int j = 0; j < SystemConfig.MAX_EXTERNAL_SAMPLES; j++) {
                        diff[k][i][j] = Operation.HammingDistance(simples[i], complejas[j], k);
                    }
                }
                diff[k] = Operation.gridNormalization(diff[k]);
            }
            total = Operation.sumNormalizedData(diff);
        } else {
            double[][] diff = new double[SystemConfig.MAX_EXTERNAL_SAMPLES][SystemConfig.MAX_EXTERNAL_SAMPLES];
            for (int i = 0; i < SystemConfig.MAX_EXTERNAL_SAMPLES; i++) {
                for (int j = 0; j < SystemConfig.MAX_EXTERNAL_SAMPLES; j++) {
                    diff[i][j] = Operation.HammingDistance(simples[i], complejas[j]);
                }
            }
            diff = Operation.gridNormalization(diff);

            total = diff;
        }

        System.out.print("[");
        for (int i = 0; i < SystemConfig.MAX_EXTERNAL_SAMPLES; i++) {
            System.out.print("[");
            for (int j = 0; j < SystemConfig.MAX_EXTERNAL_SAMPLES; j++) {
                System.out.print(total[i][j] + ",");
            }
            System.out.println("],");
        }
        System.out.println("]");
    }

    private void Dissimilarity() {

        int[][] mat
                = {
                    {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 79, 89, 105, 1000015, 1000014, 1000013, 1000012, 1000011, 1000010, 1000009, 1000008, 1000007, 1000006, 1000005, 1000004, 1000003, 1000002, 1000001, 1000000, 1000031, 1000030, 1000029, 1000028, 1000027, 1000026, 1000025, 1000024, 1000023, 1000022, 1000021, 1000020, 1000019, 1000018, 1000017, 1000016, 1000047, 1000046, 1000045, 1000044, 1000043, 1000042, 1000041, 1000040, 1000039, 1000038, 1000037, 1000036, 1000035, 1000034, 1000033, 1000032, 1000279, 2000963, 2001052, 2001053, 2001050, 2001049, 2001046, 2001047, 2001098, 2001099, 2001143, 2001126, 2001127, 2001196, 2001194, 2001195, 2000030, 2000031, 2000028, 2000029, 2000026, 2000027, 2000024, 2000025, 2000022, 2000023, 2000020, 2000021, 2000018, 2000019, 2000016, 2000017, 2000014, 2000015, 2000012, 2000013, 2000010, 2000011, 2000008, 2000009, 2000006, 2000007, 2000004, 2000005, 2000002, 2000000, 2000001, 2000062, 2000063, 2000060, 2000061, 2000058, 2000059, 2000056, 2000057, 2000054, 2000055, 2000052, 2000053, 2000050, 2000051, 2000048, 2000049, 2000046, 2000047, 2000044, 2000045, 2000042, 2000043, 2000040, 2000041, 2000038, 2000039, 2000036, 2000037, 2000034, 2000035, 2000032, 2000033, 2000094, 2000095, 2000092, 2000093, 2000090, 2000091, 2000088, 2000089, 2000086, 2000087, 2000084, 2000085, 2000082, 2000083, 2000080, 2000081, 2000078, 2000079, 2000076, 2000077, 2000074, 2000075, 2000072, 2000073, 2000070, 2000071, 2000068, 2000069, 2000066, 2000067, 2000064, 2000065, 2000126, 2000127, 2000124, 2000125, 2000122, 2000123, 2000120, 2000121, 2000118, 2000119, 2000116, 2000117, 2000114, 2000115, 2000112, 2000113, 2000110, 2000111, 2000108, 2000109, 2000106, 2000107, 2000104, 2000105, 2000102, 2000103, 2000100, 2000101, 2000098, 2000099, 2000096, 2000097, 2000146, 2000147, 2000144, 2000145, 2000142, 2000143, 2000140, 2000141, 2000138, 2000139, 2000136, 2000137, 2000134, 2000135, 2000132, 2000133, 2000130, 2000131, 2000128, 2000129, 2000304, 2000305, 2000303, 2000300, 2000297, 2000788, 2000789, 2000806, 2000805},
                    {15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 55, 1000043, 1000042, 1000040, 1000063, 1000062, 1000061, 1000060, 1000059, 1000058, 1000057, 1000056, 1000055, 1000054, 1000053, 1000052, 1000051, 1000050, 1000049, 1000048, 1000079, 1000078, 1000077, 1000076, 1000075, 1000074, 1000073, 1000072, 1000071, 1000070, 1000069, 1000068, 1000067, 1000066, 1000065, 1000064, 1000095, 1000094, 1000093, 1000092, 1000091, 1000090, 1000089, 1000088, 1000087, 1000086, 1000085, 1000084, 1000083, 1000082, 1000081, 1000080, 1000107, 1000106, 1000105, 1000104, 1000103, 1000102, 1000101, 1000100, 1000099, 1000098, 1000097, 1000096, 1000279, 1000359, 2001143, 2001130, 2001129, 2001126, 2001127, 2000014, 2000015, 2000012, 2000013, 2000010, 2000011, 2000008, 2000009, 2000006, 2000007, 2000004, 2000005, 2000002, 2000000, 2000158, 2000159, 2000156, 2000157, 2000154, 2000155, 2000152, 2000153, 2000150, 2000151, 2000148, 2000149, 2000190, 2000191, 2000188, 2000189, 2000186, 2000187, 2000184, 2000185, 2000182, 2000183, 2000180, 2000181, 2000178, 2000179, 2000176, 2000177, 2000174, 2000175, 2000172, 2000173, 2000170, 2000171, 2000168, 2000169, 2000166, 2000167, 2000164, 2000165, 2000162, 2000163, 2000160, 2000161, 2000222, 2000223, 2000220, 2000221, 2000218, 2000219, 2000216, 2000217, 2000214, 2000215, 2000212, 2000213, 2000210, 2000211, 2000208, 2000209, 2000206, 2000207, 2000204, 2000205, 2000202, 2000203, 2000200, 2000201, 2000198, 2000199, 2000196, 2000197, 2000194, 2000195, 2000192, 2000193, 2000254, 2000255, 2000252, 2000253, 2000250, 2000251, 2000248, 2000249, 2000246, 2000247, 2000244, 2000245, 2000242, 2000243, 2000240, 2000241, 2000238, 2000239, 2000236, 2000237, 2000234, 2000235, 2000232, 2000233, 2000230, 2000231, 2000228, 2000229, 2000226, 2000227, 2000224, 2000225, 2000286, 2000287, 2000284, 2000285, 2000282, 2000283, 2000280, 2000281, 2000278, 2000279, 2000276, 2000277, 2000274, 2000275, 2000272, 2000273, 2000270, 2000271, 2000268, 2000269, 2000266, 2000267, 2000264, 2000265, 2000262, 2000263, 2000260, 2000261, 2000258, 2000259, 2000256, 2000257, 2000296, 2000294, 2000295, 2000292, 2000293, 2000290, 2000291, 2000288, 2000289, 2000372, 2000373, 2000371, 2000627, 2000615, 2000806, 2000805},
                    {10, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 71, 79, 89, 101, 1000047, 1000046, 1000045, 1000044, 1000043, 1000042, 1000041, 1000040, 1000111, 1000110, 1000109, 1000108, 1000127, 1000126, 1000125, 1000124, 1000123, 1000122, 1000121, 1000120, 1000119, 1000118, 1000117, 1000116, 1000115, 1000114, 1000113, 1000112, 1000143, 1000142, 1000141, 1000140, 1000139, 1000138, 1000137, 1000136, 1000135, 1000134, 1000133, 1000132, 1000131, 1000130, 1000129, 1000128, 1000159, 1000158, 1000157, 1000156, 1000155, 1000154, 1000153, 1000152, 1000151, 1000150, 1000149, 1000148, 1000147, 1000146, 1000145, 1000144, 1000175, 1000174, 1000173, 1000172, 1000171, 1000170, 1000169, 1000168, 1000167, 1000166, 1000165, 1000164, 1000163, 1000162, 1000161, 1000160, 1000187, 1000186, 1000185, 1000184, 1000183, 1000182, 1000181, 1000180, 1000179, 1000178, 1000177, 1000176, 2000963, 2001050, 2001046, 2001047, 2001130, 2001129, 2001126, 2001127, 2000030, 2000028, 2000029, 2000026, 2000027, 2000022, 2000018, 2000016, 2000017, 2000015, 2000059, 2000054, 2000055, 2000053, 2000050, 2000051, 2000048, 2000049, 2000047, 2000318, 2000319, 2000316, 2000317, 2000314, 2000315, 2000312, 2000313, 2000310, 2000311, 2000308, 2000309, 2000306, 2000307, 2000304, 2000305, 2000302, 2000303, 2000300, 2000301, 2000298, 2000299, 2000297, 2000290, 2000289, 2000350, 2000351, 2000348, 2000349, 2000346, 2000347, 2000344, 2000345, 2000342, 2000343, 2000340, 2000341, 2000338, 2000339, 2000336, 2000337, 2000334, 2000335, 2000332, 2000333, 2000330, 2000331, 2000328, 2000329, 2000326, 2000327, 2000324, 2000325, 2000322, 2000323, 2000320, 2000321, 2000382, 2000383, 2000380, 2000381, 2000378, 2000379, 2000376, 2000377, 2000374, 2000375, 2000372, 2000373, 2000370, 2000371, 2000368, 2000369, 2000366, 2000367, 2000364, 2000365, 2000362, 2000363, 2000360, 2000361, 2000358, 2000359, 2000356, 2000357, 2000354, 2000355, 2000352, 2000353, 2000414, 2000415, 2000412, 2000413, 2000410, 2000411, 2000408, 2000409, 2000406, 2000407, 2000404, 2000405, 2000402, 2000403, 2000400, 2000401, 2000398, 2000399, 2000396, 2000397, 2000394, 2000395, 2000392, 2000393, 2000390, 2000391, 2000388, 2000389, 2000386, 2000387, 2000384, 2000385, 2000446, 2000447, 2000444, 2000445, 2000442, 2000443, 2000440, 2000441, 2000438, 2000439, 2000436, 2000437, 2000434, 2000435, 2000432, 2000433, 2000430, 2000431, 2000428, 2000429, 2000426, 2000427, 2000424, 2000425, 2000422, 2000423, 2000420, 2000421, 2000418, 2000419, 2000416, 2000417, 2000472, 2000473, 2000470, 2000471, 2000468, 2000469, 2000466, 2000467, 2000464, 2000465, 2000462, 2000463, 2000460, 2000461, 2000458, 2000459, 2000456, 2000457, 2000454, 2000455, 2000452, 2000453, 2000450, 2000451, 2000448, 2000449, 2000806, 2000805},
                    {11, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 101, 1000191, 1000190, 1000189, 1000188, 1000207, 1000206, 1000205, 1000204, 1000203, 1000202, 1000201, 1000200, 1000199, 1000198, 1000197, 1000196, 1000195, 1000194, 1000193, 1000192, 1000223, 1000222, 1000221, 1000220, 1000219, 1000218, 1000217, 1000216, 1000215, 1000214, 1000213, 1000212, 1000211, 1000210, 1000209, 1000208, 1000235, 1000234, 1000233, 1000232, 1000231, 1000230, 1000229, 1000228, 1000227, 1000226, 1000225, 1000224, 2000924, 2000922, 2000923, 2000921, 2001059, 2001130, 2001126, 2001127, 2000060, 2000057, 2000154, 2000155, 2000186, 2000187, 2000184, 2000185, 2000182, 2000183, 2000180, 2000181, 2000234, 2000235, 2000228, 2000229, 2000372, 2000478, 2000479, 2000476, 2000477, 2000474, 2000475, 2000470, 2000471, 2000510, 2000511, 2000508, 2000509, 2000506, 2000507, 2000504, 2000505, 2000502, 2000503, 2000500, 2000501, 2000498, 2000499, 2000496, 2000497, 2000494, 2000495, 2000492, 2000493, 2000490, 2000491, 2000488, 2000489, 2000486, 2000487, 2000484, 2000485, 2000482, 2000483, 2000480, 2000481, 2000542, 2000543, 2000540, 2000541, 2000538, 2000539, 2000536, 2000537, 2000534, 2000535, 2000532, 2000533, 2000530, 2000531, 2000528, 2000529, 2000526, 2000527, 2000524, 2000525, 2000522, 2000523, 2000520, 2000521, 2000518, 2000519, 2000516, 2000517, 2000514, 2000515, 2000512, 2000513, 2000574, 2000575, 2000572, 2000573, 2000570, 2000571, 2000568, 2000569, 2000566, 2000567, 2000564, 2000565, 2000562, 2000563, 2000560, 2000561, 2000558, 2000559, 2000556, 2000557, 2000554, 2000555, 2000552, 2000553, 2000550, 2000551, 2000548, 2000549, 2000546, 2000547, 2000544, 2000545, 2000606, 2000607, 2000604, 2000605, 2000602, 2000603, 2000600, 2000601, 2000598, 2000599, 2000596, 2000597, 2000594, 2000595, 2000592, 2000593, 2000590, 2000591, 2000588, 2000589, 2000586, 2000587, 2000584, 2000585, 2000582, 2000583, 2000580, 2000581, 2000578, 2000579, 2000576, 2000577, 2000638, 2000639, 2000636, 2000637, 2000634, 2000635, 2000632, 2000633, 2000630, 2000631, 2000628, 2000629, 2000626, 2000627, 2000624, 2000625, 2000622, 2000623, 2000620, 2000621, 2000618, 2000619, 2000616, 2000617, 2000614, 2000615, 2000612, 2000613, 2000610, 2000611, 2000608, 2000609, 2000670, 2000671, 2000668, 2000669, 2000666, 2000667, 2000664, 2000665, 2000662, 2000663, 2000660, 2000661, 2000658, 2000659, 2000656, 2000657, 2000654, 2000655, 2000652, 2000653, 2000650, 2000651, 2000648, 2000649, 2000646, 2000647, 2000644, 2000645, 2000642, 2000643, 2000640, 2000641, 2000702, 2000703, 2000700, 2000701, 2000698, 2000699, 2000696, 2000697, 2000694, 2000695, 2000692, 2000693, 2000690, 2000691, 2000688, 2000689, 2000686, 2000687, 2000684, 2000685, 2000682, 2000683, 2000680, 2000681, 2000678, 2000679, 2000676, 2000677, 2000674, 2000675, 2000672, 2000673, 2000734, 2000735, 2000732, 2000733, 2000730, 2000731, 2000728, 2000729, 2000726, 2000727, 2000724, 2000725, 2000722, 2000723, 2000720, 2000721, 2000718, 2000719, 2000716, 2000717, 2000714, 2000715, 2000712, 2000713, 2000710, 2000711, 2000708, 2000709, 2000706, 2000707, 2000704, 2000705, 2000766, 2000767, 2000764, 2000765, 2000762, 2000763, 2000760, 2000761, 2000758, 2000759, 2000756, 2000757, 2000754, 2000755, 2000752, 2000753, 2000750, 2000751, 2000748, 2000749, 2000746, 2000747, 2000744, 2000745, 2000742, 2000743, 2000740, 2000741, 2000738, 2000739, 2000736, 2000737, 2000774, 2000775, 2000772, 2000773, 2000770, 2000771, 2000768, 2000769},
                    {8, 10, 75, 76, 77, 78, 79, 101, 114, 125, 1000045, 1000044, 1000043, 1000042, 1000040, 1000183, 1000182, 1000239, 1000238, 1000237, 1000236, 1000255, 1000254, 1000253, 1000252, 1000251, 1000250, 1000249, 1000248, 1000247, 1000246, 1000245, 1000244, 1000243, 1000242, 1000241, 1000240, 1000271, 1000270, 1000269, 1000268, 1000267, 1000266, 1000265, 1000264, 1000263, 1000262, 1000261, 1000260, 1000259, 1000258, 1000257, 1000256, 1000279, 1000277, 1000276, 1000275, 1000274, 1000273, 1000272, 1000351, 1000361, 1000360, 2000963, 2001050, 2001049, 2001046, 2001047, 2001098, 2001099, 2001130, 2001128, 2001129, 2001126, 2001127, 2001166, 2001165, 2000030, 2000026, 2000024, 2000025, 2000022, 2000020, 2000021, 2000018, 2000016, 2000017, 2000015, 2000011, 2000009, 2000006, 2000007, 2000005, 2000002, 2000000, 2000001, 2000040, 2000039, 2000035, 2000187, 2000184, 2000185, 2000182, 2000183, 2000304, 2000305, 2000302, 2000303, 2000300, 2000301, 2000298, 2000299, 2000297, 2000512, 2000513, 2000798, 2000799, 2000796, 2000797, 2000794, 2000795, 2000792, 2000793, 2000790, 2000791, 2000788, 2000789, 2000786, 2000787, 2000784, 2000785, 2000782, 2000783, 2000780, 2000781, 2000778, 2000779, 2000776, 2000777, 2000830, 2000831, 2000828, 2000829, 2000826, 2000827, 2000824, 2000825, 2000822, 2000823, 2000820, 2000821, 2000818, 2000819, 2000816, 2000817, 2000814, 2000815, 2000812, 2000813, 2000810, 2000811, 2000808, 2000809, 2000806, 2000807, 2000804, 2000805, 2000802, 2000803, 2000800, 2000801, 2000860, 2000861, 2000858, 2000859, 2000856, 2000857, 2000854, 2000855, 2000852, 2000853, 2000850, 2000851, 2000848, 2000849, 2000846, 2000847, 2000844, 2000845, 2000842, 2000843, 2000840, 2000841, 2000838, 2000839, 2000836, 2000837, 2000834, 2000835, 2000832, 2000833},
                    {9, 12, 55, 72, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 101, 114, 1000044, 1000043, 1000042, 1000041, 1000040, 1000241, 1000287, 1000286, 1000285, 1000284, 1000283, 1000282, 1000281, 1000280, 1000279, 1000278, 1000295, 1000294, 1000293, 1000292, 1000291, 1000290, 1000289, 1000288, 1000356, 1000375, 1000374, 1000373, 1000372, 2000912, 2000910, 2000911, 2000908, 2000909, 2000906, 2000907, 2000904, 2000905, 2000902, 2000903, 2000900, 2000901, 2000898, 2000899, 2000896, 2000897, 2000963, 2001052, 2001053, 2001050, 2001048, 2001049, 2001046, 2001047, 2000030, 2000031, 2000028, 2000029, 2000026, 2000027, 2000024, 2000025, 2000022, 2000023, 2000018, 2000019, 2000016, 2000017, 2000014, 2000015, 2000012, 2000013, 2000010, 2000011, 2000008, 2000009, 2000006, 2000007, 2000004, 2000005, 2000002, 2000000, 2000001, 2000044, 2000043, 2000040, 2000041, 2000038, 2000039, 2000036, 2000037, 2000034, 2000035, 2000032, 2000033, 2000304, 2000305, 2000297, 2000806, 2000805, 2000862, 2000863, 2000894, 2000895, 2000892, 2000893, 2000890, 2000891, 2000888, 2000889, 2000886, 2000887, 2000884, 2000885, 2000882, 2000883, 2000880, 2000881, 2000878, 2000879, 2000876, 2000877, 2000874, 2000875, 2000872, 2000873, 2000870, 2000871, 2000868, 2000869, 2000866, 2000867, 2000864, 2000865},
                    {39, 75, 79, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 114, 1000047, 1000046, 1000045, 1000044, 1000043, 1000042, 1000041, 1000040, 1000091, 1000090, 1000089, 1000088, 1000237, 1000251, 1000250, 1000248, 1000303, 1000302, 1000301, 1000300, 1000299, 1000298, 1000297, 1000296, 1000319, 1000318, 1000317, 1000316, 1000315, 1000314, 1000313, 1000312, 1000311, 1000310, 1000309, 1000308, 1000307, 1000306, 1000305, 1000304, 1000335, 1000334, 1000333, 1000332, 1000331, 1000330, 1000329, 1000328, 1000327, 1000326, 1000325, 1000324, 1000323, 1000322, 1000321, 1000320, 1000337, 1000336, 2000926, 2000927, 2000924, 2000925, 2000922, 2000923, 2000920, 2000921, 2000918, 2000919, 2000916, 2000917, 2000914, 2000915, 2000913, 2000958, 2000959, 2000956, 2000957, 2000954, 2000955, 2000952, 2000953, 2000950, 2000951, 2000948, 2000949, 2000946, 2000947, 2000944, 2000945, 2000942, 2000943, 2000940, 2000941, 2000938, 2000939, 2000936, 2000937, 2000934, 2000935, 2000932, 2000933, 2000930, 2000931, 2000928, 2000929, 2000988, 2000989, 2000986, 2000987, 2000984, 2000985, 2000982, 2000983, 2000980, 2000981, 2000978, 2000979, 2000976, 2000977, 2000974, 2000975, 2000972, 2000973, 2000970, 2000971, 2000968, 2000969, 2000966, 2000967, 2000964, 2000965, 2000962, 2000963, 2000960, 2000961, 2001050, 2001049, 2001046, 2001047, 2000030, 2000028, 2000029, 2000026, 2000027, 2000024, 2000025, 2000022, 2000020, 2000021, 2000018, 2000016, 2000017, 2000015, 2000011, 2000007, 2000002, 2000000, 2000001, 2000058, 2000054, 2000055, 2000050, 2000051, 2000304, 2000305, 2000303, 2000300, 2000297, 2000786, 2000785, 2000782, 2000783, 2000810, 2000811, 2000808, 2000809, 2000806, 2000807, 2000805, 2000858, 2000859, 2000856, 2000855, 2000852, 2000853, 2000850, 2000851},
                    {55, 79, 80, 89, 96, 104, 105, 106, 107, 108, 109, 110, 114, 1000045, 1000044, 1000043, 1000042, 1000041, 1000040, 1000281, 1000279, 1000278, 1000295, 1000294, 1000351, 1000350, 1000349, 1000348, 1000347, 1000346, 1000345, 1000344, 1000343, 1000342, 1000341, 1000340, 1000339, 1000338, 1000361, 1000360, 1000356, 1000353, 1000352, 2000990, 2000991, 2000963, 2001022, 2001023, 2001020, 2001021, 2001018, 2001019, 2001016, 2001017, 2001014, 2001015, 2001012, 2001013, 2001010, 2001011, 2001008, 2001009, 2001006, 2001007, 2001004, 2001005, 2001002, 2001003, 2001000, 2001001, 2000998, 2000999, 2000996, 2000997, 2000994, 2000995, 2000992, 2000993, 2001052, 2001053, 2001050, 2001048, 2001049, 2001046, 2001047, 2001042, 2001043, 2001040, 2001041, 2001038, 2001039, 2001036, 2001037, 2001034, 2001035, 2001032, 2001033, 2001030, 2001031, 2001028, 2001029, 2001026, 2001027, 2001024, 2001025, 2001062, 2001060, 2001059, 2001170, 2000028, 2000029, 2000026, 2000024, 2000025, 2000022, 2000023, 2000020, 2000021, 2000018, 2000019, 2000017, 2000015, 2000010, 2000011, 2000009, 2000007, 2000002, 2000000, 2000001, 2000044, 2000043, 2000040, 2000041, 2000039, 2000037, 2000034, 2000035, 2000032, 2000033, 2000154, 2000155, 2000152, 2000153, 2000150, 2000151, 2000148, 2000149, 2000186, 2000187, 2000185, 2000182, 2000183, 2000180, 2000181, 2000304, 2000305, 2000303, 2000300, 2000297, 2000788, 2000789, 2000786, 2000787, 2000784, 2000785, 2000782, 2000783, 2000806, 2000805, 2000800},
                    {9, 55, 79, 99, 101, 105, 106, 111, 112, 113, 114, 125, 1000047, 1000046, 1000045, 1000044, 1000043, 1000042, 1000041, 1000040, 1000243, 1000242, 1000281, 1000279, 1000278, 1000295, 1000294, 1000339, 1000338, 1000367, 1000366, 1000365, 1000364, 1000363, 1000362, 1000361, 1000360, 1000359, 1000358, 1000357, 1000356, 1000355, 1000354, 1000377, 1000376, 1000375, 1000374, 1000373, 1000372, 1000371, 1000370, 1000369, 1000368, 2000963, 2001054, 2001055, 2001052, 2001053, 2001050, 2001051, 2001048, 2001049, 2001046, 2001047, 2001044, 2001045, 2001086, 2001087, 2001084, 2001085, 2001082, 2001083, 2001080, 2001081, 2001078, 2001079, 2001076, 2001077, 2001074, 2001075, 2001072, 2001073, 2001070, 2001071, 2001068, 2001069, 2001066, 2001067, 2001064, 2001065, 2001062, 2001063, 2001060, 2001061, 2001058, 2001059, 2001056, 2001057, 2001090, 2001091, 2001088, 2001089, 2001143, 2001170, 2001166, 2001167, 2001165, 2000028, 2000029, 2000024, 2000025, 2000020, 2000021, 2000017, 2000014, 2000013, 2000010, 2000011, 2000008, 2000009, 2000006, 2000007, 2000004, 2000005, 2000002, 2000001, 2000056, 2000055, 2000052, 2000053, 2000048, 2000049, 2000047, 2000304, 2000305, 2000302, 2000297, 2000788, 2000789, 2000822, 2000823, 2000820, 2000821, 2000818, 2000819, 2000816, 2000817, 2000814, 2000815, 2000812, 2000813, 2000806, 2000805, 2000858, 2000859, 2000856, 2000857, 2000854, 2000855, 2000852, 2000853, 2000850, 2000851, 2000848, 2000849},
                    {8, 9, 11, 55, 89, 101, 105, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 1000463, 1000462, 1000461, 1000460, 1000459, 1000458, 1000457, 1000456, 1000455, 1000454, 1000453, 1000452, 1000451, 1000450, 1000449, 1000448, 1000477, 1000476, 1000475, 1000474, 1000473, 1000472, 1000471, 1000470, 1000469, 1000468, 1000467, 1000466, 1000465, 1000464, 1000044, 1000043, 1000042, 1000040, 1000233, 1000232, 1000279, 1000351, 1000365, 1000364, 1000363, 1000362, 1000383, 1000382, 1000381, 1000380, 1000379, 1000378, 1000399, 1000398, 1000397, 1000396, 1000395, 1000394, 1000393, 1000392, 1000391, 1000390, 1000389, 1000388, 1000387, 1000386, 1000385, 1000384, 1000415, 1000414, 1000413, 1000412, 1000411, 1000410, 1000409, 1000408, 1000407, 1000406, 1000405, 1000404, 1000403, 1000402, 1000401, 1000400, 1000431, 1000430, 1000429, 1000428, 1000427, 1000426, 1000425, 1000424, 1000423, 1000422, 1000421, 1000420, 1000419, 1000418, 1000417, 1000416, 1000447, 1000446, 1000445, 1000444, 1000443, 1000442, 1000441, 1000440, 1000439, 1000438, 1000437, 1000436, 1000435, 1000434, 1000433, 1000432, 2000963, 2001050, 2001049, 2001046, 2001047, 2001062, 2001118, 2001119, 2001116, 2001117, 2001114, 2001115, 2001112, 2001113, 2001110, 2001111, 2001108, 2001109, 2001106, 2001107, 2001104, 2001105, 2001102, 2001103, 2001100, 2001101, 2001098, 2001099, 2001096, 2001097, 2001094, 2001095, 2001092, 2001093, 2001150, 2001151, 2001148, 2001149, 2001146, 2001147, 2001144, 2001145, 2001142, 2001143, 2001140, 2001141, 2001138, 2001139, 2001136, 2001137, 2001134, 2001135, 2001132, 2001133, 2001130, 2001131, 2001128, 2001129, 2001126, 2001127, 2001124, 2001125, 2001122, 2001123, 2001120, 2001121, 2001174, 2001172, 2001173, 2001170, 2001171, 2001168, 2001169, 2001166, 2001167, 2001164, 2001165, 2001162, 2001163, 2001160, 2001161, 2001158, 2001159, 2001156, 2001157, 2001154, 2001155, 2001152, 2001153, 2000030, 2000028, 2000029, 2000026, 2000027, 2000024, 2000025, 2000022, 2000020, 2000021, 2000018, 2000016, 2000017, 2000014, 2000015, 2000013, 2000010, 2000011, 2000009, 2000006, 2000005, 2000002, 2000058, 2000059, 2000054, 2000055, 2000050, 2000051, 2000048, 2000305, 2000303, 2000788, 2000789, 2000806, 2000805},};
        double[][] total = new double[SystemConfig.MAX_EXTERNAL_SAMPLES][SystemConfig.MAX_EXTERNAL_SAMPLES];
        if (SystemConfig.CHECK_ALL) {
            double[][][] diff = new double[3][SystemConfig.MAX_EXTERNAL_SAMPLES][SystemConfig.MAX_EXTERNAL_SAMPLES];
            for (int k = 0; k < 3; k++) {
                for (int i = 0; i < SystemConfig.MAX_EXTERNAL_SAMPLES; i++) {
                    for (int j = 0; j < SystemConfig.MAX_EXTERNAL_SAMPLES; j++) {
                        diff[k][i][j] = Operation.HammingDistance(mat[i], mat[j], k);
                    }
                }
                diff[k] = Operation.gridNormalization(diff[k]);
            }
            total = Operation.sumNormalizedData(diff);
        } else {
            double[][] diff = new double[SystemConfig.MAX_EXTERNAL_SAMPLES][SystemConfig.MAX_EXTERNAL_SAMPLES];
            for (int i = 0; i < SystemConfig.MAX_EXTERNAL_SAMPLES; i++) {
                for (int j = 0; j < SystemConfig.MAX_EXTERNAL_SAMPLES; j++) {
                    diff[i][j] = Operation.HammingDistance(mat[i], mat[j]);
                }
            }
            diff = Operation.gridNormalization(diff);

            total = diff;
        }

        System.out.print("[");
        for (int i = 0; i < SystemConfig.MAX_EXTERNAL_SAMPLES; i++) {
            System.out.print("[");
            for (int j = 0; j < SystemConfig.MAX_EXTERNAL_SAMPLES; j++) {
                System.out.print(total[i][j] + ",");
            }
            System.out.println("],");
        }
        System.out.println("]");
    }

    private void calculateDistancesCorrel() {

        double[][] simples
                = {{1.0, 0.09663865546218488, 0.18067226890756302, 0.02100840336134454, 0.24378109452736318, 0.41333333333333333, 0.22330097087378642, 0.32941176470588235, 0.3212121212121212, 0.23109243697478993,},
                {0.09663865546218488, 1.0, 0.061068702290076333, 0.07633587786259542, 0.11442786069651742, 0.14, 0.06796116504854369, 0.17058823529411765, 0.12121212121212122, 0.08235294117647059,},
                {0.18067226890756302, 0.061068702290076333, 1.0, 0.027950310559006212, 0.1791044776119403, 0.18, 0.17475728155339806, 0.1588235294117647, 0.17575757575757575, 0.13725490196078433,},
                {0.02100840336134454, 0.07633587786259542, 0.027950310559006212, 1.0, 0.05472636815920398, 0.013333333333333334, 0.024271844660194174, 0.058823529411764705, 0.012121212121212121, 0.027450980392156862,},
                {0.24378109452736318, 0.11442786069651742, 0.1791044776119403, 0.05472636815920398, 1.0, 0.25333333333333335, 0.2885572139303483, 0.3176470588235294, 0.3939393939393939, 0.22885572139303484,},
                {0.41333333333333333, 0.14, 0.18, 0.013333333333333334, 0.25333333333333335, 1.0, 0.22666666666666666, 0.37333333333333335, 0.32666666666666666, 0.25333333333333335,},
                {0.22330097087378642, 0.06796116504854369, 0.17475728155339806, 0.024271844660194174, 0.2885572139303483, 0.22666666666666666, 1.0, 0.24705882352941178, 0.2606060606060606, 0.1796116504854369,},
                {0.32941176470588235, 0.17058823529411765, 0.1588235294117647, 0.058823529411764705, 0.3176470588235294, 0.37333333333333335, 0.24705882352941178, 1.0, 0.3212121212121212, 0.2235294117647059,},
                {0.3212121212121212, 0.12121212121212122, 0.17575757575757575, 0.012121212121212121, 0.3939393939393939, 0.32666666666666666, 0.2606060606060606, 0.3212121212121212, 1.0, 0.2909090909090909,},
                {0.23109243697478993, 0.08235294117647059, 0.13725490196078433, 0.027450980392156862, 0.22885572139303484, 0.25333333333333335, 0.1796116504854369, 0.2235294117647059, 0.2909090909090909, 1.0,},};
        double[][] complejas
                = {{1.0, 0.5557093828742683, 0.28829814791632835, 0.135186119349893, 0.29732803186828305, 0.02191068403028673, 0.3922685453155037, 0.25223438656157937, 0.3732500765349439, 0.23290853857299199,},
                {0.5557093828742683, 1.0, 0.6597993854894704, 0.4544552013395784, 0.6670209377296823, 0.32865282386055894, 0.7818729309227201, 0.6360630176953748, 0.7545291954473173, 0.6023870226481463,},
                {0.28829814791632835, 0.6597993854894704, 1.0, 0.3000206985192503, 0.5880443121832476, 0.3228485624444579, 0.6613753236467568, 0.6239017080616395, 0.6217128706367335, 0.6444124533198814,},
                {0.135186119349893, 0.4544552013395784, 0.3000206985192503, 1.0, 0.20121625490660255, 0.0, 0.4298939913561992, 0.3081389800215909, 0.3641129816898667, 0.2722927390338129,},
                {0.29732803186828305, 0.6670209377296823, 0.5880443121832476, 0.20121625490660255, 1.0, 0.32948634207587557, 0.6243950021132321, 0.6857574356641684, 0.6863312928146392, 0.696899312239022,},
                {0.02191068403028673, 0.32865282386055894, 0.3228485624444579, 0.0, 0.32948634207587557, 1.0, 0.35783091912580367, 0.3419606083629454, 0.36858237452917064, 0.34770103901608906,},
                {0.3922685453155037, 0.7818729309227201, 0.6613753236467568, 0.4298939913561992, 0.6243950021132321, 0.35783091912580367, 1.0, 0.7377677328676373, 0.7823835770263788, 0.7091734102111868,},
                {0.25223438656157937, 0.6360630176953748, 0.6239017080616395, 0.3081389800215909, 0.6857574356641684, 0.3419606083629454, 0.7377677328676373, 1.0, 0.8025460418110089, 0.8089817939790858,},
                {0.3732500765349439, 0.7545291954473173, 0.6217128706367335, 0.3641129816898667, 0.6863312928146392, 0.36858237452917064, 0.7823835770263788, 0.8025460418110089, 1.0, 0.7358379367914321,},
                {0.23290853857299199, 0.6023870226481463, 0.6444124533198814, 0.2722927390338129, 0.696899312239022, 0.34770103901608906, 0.7091734102111868, 0.8089817939790858, 0.7358379367914321, 1.0,},};
        double[][] total = new double[SystemConfig.MAX_EXTERNAL_SAMPLES][SystemConfig.MAX_EXTERNAL_SAMPLES];

        double[][] diff = new double[SystemConfig.MAX_EXTERNAL_SAMPLES][SystemConfig.MAX_EXTERNAL_SAMPLES];
        for (int i = 0; i < SystemConfig.MAX_EXTERNAL_SAMPLES; i++) {
            for (int j = 0; j < SystemConfig.MAX_EXTERNAL_SAMPLES; j++) {
                diff[i][j] = Operation.matricesMatchedVal(simples, complejas);
            }
        }
        //diff = Operation.gridNormalization(diff);

        total = diff;

        System.out.print("[");
        for (int i = 0; i < SystemConfig.MAX_EXTERNAL_SAMPLES; i++) {
            System.out.print("[");
            for (int j = 0; j < SystemConfig.MAX_EXTERNAL_SAMPLES; j++) {
                System.out.print(total[i][j] + ",");
            }
            System.out.println("],");
        }
        System.out.println("]");
    }
    
    private double calculateDistancesCorrel(double[][] simples, double[][] complejas) {

        double[][] total = new double[SystemConfig.MAX_EXTERNAL_SAMPLES][SystemConfig.MAX_EXTERNAL_SAMPLES];

        double[][] diff = new double[SystemConfig.MAX_EXTERNAL_SAMPLES][SystemConfig.MAX_EXTERNAL_SAMPLES];
        for (int i = 0; i < SystemConfig.MAX_EXTERNAL_SAMPLES; i++) {
            for (int j = 0; j < SystemConfig.MAX_EXTERNAL_SAMPLES; j++) {
                diff[i][j] = Operation.matricesMatchedVal(simples, complejas);
            }
        }
        //diff = Operation.gridNormalization(diff);

        total = diff;
        
        return total[0][0];
    }
    
    private void calculateSecondOrderDiss(){
        double[][][] data = DataStructure.getSecondOrderData();
        double[][] matrixData = new double[data.length][data.length];
        for(int i=0; i<data.length; i++){
            for(int j=0; j<data.length; j++){
                matrixData[i][j] = calculateDistancesCorrel(data[i],data[j]);
            }
        }
        
        System.out.print("[");
        for (int i = 0; i < matrixData.length; i++) {
            System.out.print("[");
            for (int j = 0; j < matrixData.length; j++) {
                System.out.print(matrixData[i][j] + ",");
            }
            System.out.println("],");
        }
        System.out.println("]");
    }

}
